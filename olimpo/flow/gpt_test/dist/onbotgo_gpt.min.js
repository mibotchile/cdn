var Vt = Object.defineProperty;
var Yt = (n, t, e) => t in n ? Vt(n, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : n[t] = e;
var m = (n, t, e) => (Yt(n, typeof t != "symbol" ? t + "" : t, e), e);
class Gt {
  constructor() {
    m(this, "typography", {
      primary: "'Trebuchet MS', sans-serif"
    });
    m(this, "colors", { primary: "rgb(59, 129, 246)" });
    m(this, "defaultIcon", `
  <svg viewBox="0 0 24 24"><path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path></svg>
  `);
    m(this, "customIcon", "");
  }
}
const L = new Gt();
function Ut(n) {
  if (n.__esModule)
    return n;
  var t = n.default;
  if (typeof t == "function") {
    var e = function r() {
      return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
    };
    e.prototype = t.prototype;
  } else
    e = {};
  return Object.defineProperty(e, "__esModule", { value: !0 }), Object.keys(n).forEach(function(r) {
    var o = Object.getOwnPropertyDescriptor(n, r);
    Object.defineProperty(e, r, o.get ? o : {
      enumerable: !0,
      get: function() {
        return n[r];
      }
    });
  }), e;
}
const Xt = {}, Zt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Xt
}, Symbol.toStringTag, { value: "Module" })), It = /* @__PURE__ */ Ut(Zt);
var St = new Function("return this")().Promise, st = !1;
try {
  st = new Function("return (async function(){}).constructor")();
} catch (n) {
  if (!(n instanceof SyntaxError))
    throw n;
}
function Ht(n, t) {
  return Object.prototype.hasOwnProperty.call(n, t);
}
function D(n, t, e) {
  for (var r in t)
    Ht(t, r) && (t[r] != null && typeof t[r] == "object" && (r === "storage" || r === "prefixes") && !e ? n[r] = D(
      /*toObj[key] ||*/
      {},
      t[r]
    ) : n[r] = t[r]);
  return n;
}
function Jt(n, t, e, r) {
  var o, i;
  return typeof t.autoTrim == "string" ? o = i = t.autoTrim : Array.isArray(t.autoTrim) && (o = t.autoTrim[1], i = t.autoTrim[0]), (e || e === !1) && (o = e), (r || r === !1) && (i = r), o === "slurp" && i === "slurp" ? n.trim() : (o === "_" || o === "slurp" ? String.prototype.trimLeft ? n = n.trimLeft() : n = n.replace(/^[\s\uFEFF\xA0]+/, "") : (o === "-" || o === "nl") && (n = n.replace(/^(?:\n|\r|\r\n)/, "")), i === "_" || i === "slurp" ? String.prototype.trimRight ? n = n.trimRight() : n = n.replace(/[\s\uFEFF\xA0]+$/, "") : (i === "-" || i === "nl") && (n = n.replace(/(?:\n|\r|\r\n)$/, "")), n);
}
var Q = (
  /** @class */
  function() {
    function n(t) {
      this.cache = t;
    }
    return n.prototype.define = function(t, e) {
      this.cache[t] = e;
    }, n.prototype.get = function(t) {
      return this.cache[t];
    }, n.prototype.remove = function(t) {
      delete this.cache[t];
    }, n.prototype.reset = function() {
      this.cache = {};
    }, n.prototype.load = function(t) {
      D(this.cache, t, !0);
    }, n;
  }()
);
function Qt(n, t) {
  Object.setPrototypeOf ? Object.setPrototypeOf(n, t) : n.__proto__ = t;
}
function M(n) {
  var t = new Error(n);
  return Qt(t, M.prototype), t;
}
M.prototype = Object.create(Error.prototype, {
  name: { value: "Squirrelly Error", enumerable: !1 }
});
function _(n, t, e) {
  var r = t.slice(0, e).split(/\n/), o = r.length, i = r[o - 1].length + 1;
  throw n += " at line " + o + " col " + i + `:

  ` + t.split(/\n/)[o - 1] + `
  ` + Array(i).join(" ") + "^", M(n);
}
var W = /^async +/, V = /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})*}|(?!\${)[^\\`])*`/g, Y = /'(?:\\[\s\w"'\\`]|[^\n\r'\\])*?'/g, G = /"(?:\\[\s\w"'\\`]|[^\n\r"\\])*?"/g, Mt = /[.*+\-?^${}()|[\]\\]/g;
function U(n) {
  return Mt.test(n) ? n.replace(Mt, "\\$&") : n;
}
function Kt(n, t) {
  t.rmWhitespace && (n = n.replace(/[\r\n]+/g, `
`).replace(/^\s+|\s+$/gm, "")), V.lastIndex = 0, Y.lastIndex = 0, G.lastIndex = 0;
  var e = t.prefixes, r = [
    e.h,
    e.b,
    e.i,
    e.r,
    e.c,
    e.e
  ].reduce(function(u, p) {
    return u && p ? u + "|" + U(p) : p ? U(p) : u;
  }, ""), o = new RegExp("([|()]|=>)|('|\"|`|\\/\\*)|\\s*((\\/)?(-|_)?" + // comments, strings
  U(t.tags[1]) + ")", "g"), i = new RegExp("([^]*?)" + U(t.tags[0]) + "(-|_)?\\s*(" + r + ")?\\s*", "g"), s = 0, l = !1;
  function h(u, p) {
    var g = { f: [] }, f = 0, C = "c";
    p === "h" || p === "b" || p === "c" ? C = "n" : p === "r" && (g.raw = !0, p = "i");
    function b(j) {
      var wt = n.slice(s, j), I = wt.trim();
      if (C === "f")
        I === "safe" ? g.raw = !0 : t.async && W.test(I) ? (I = I.replace(W, ""), g.f.push([I, "", !0])) : g.f.push([I, ""]);
      else if (C === "fp")
        g.f[g.f.length - 1][1] += I;
      else if (C === "err") {
        if (I) {
          var jt = wt.search(/\S/);
          _("invalid syntax", n, s + jt);
        }
      } else
        g[C] = I;
      s = j + 1;
    }
    o.lastIndex = s;
    for (var v; (v = o.exec(n)) !== null; ) {
      var k = v[1], x = v[2], S = v[3], T = v[4], w = v[5], E = v.index;
      if (k)
        k === "(" ? (f === 0 && (C === "n" ? (b(E), C = "p") : C === "f" && (b(E), C = "fp")), f++) : k === ")" ? (f--, f === 0 && C !== "c" && (b(E), C = "err")) : f === 0 && k === "|" ? (b(E), C = "f") : k === "=>" && (b(E), s += 1, C = "res");
      else if (x) {
        if (x === "/*") {
          var P = n.indexOf("*/", o.lastIndex);
          P === -1 && _("unclosed comment", n, v.index), o.lastIndex = P + 2;
        } else if (x === "'") {
          Y.lastIndex = v.index;
          var A = Y.exec(n);
          A ? o.lastIndex = Y.lastIndex : _("unclosed string", n, v.index);
        } else if (x === '"') {
          G.lastIndex = v.index;
          var N = G.exec(n);
          N ? o.lastIndex = G.lastIndex : _("unclosed string", n, v.index);
        } else if (x === "`") {
          V.lastIndex = v.index;
          var F = V.exec(n);
          F ? o.lastIndex = V.lastIndex : _("unclosed string", n, v.index);
        }
      } else if (S)
        return b(E), s = E + v[0].length, i.lastIndex = s, l = w, T && p === "h" && (p = "s"), g.t = p, g;
    }
    return _("unclosed tag", n, u), g;
  }
  function c(u, p) {
    u.b = [], u.d = [];
    var g = !1, f = [];
    function C(F, j) {
      F && (F = Jt(
        F,
        t,
        l,
        // this will only be false on the first str, the next ones will be null or undefined
        j
      ), F && (F = F.replace(/\\|'/g, "\\$&").replace(/\r\n|\n|\r/g, "\\n"), f.push(F)));
    }
    for (var b; (b = i.exec(n)) !== null; ) {
      var v = b[1], k = b[2], x = b[3] || "", S;
      for (var T in e)
        if (e[T] === x) {
          S = T;
          break;
        }
      C(v, k), s = b.index + b[0].length, S || _("unrecognized tag type: " + x, n, s);
      var w = h(b.index, S), E = w.t;
      if (E === "h") {
        var P = w.n || "";
        t.async && W.test(P) && (w.a = !0, w.n = P.replace(W, "")), w = c(w), f.push(w);
      } else if (E === "c") {
        if (u.n === w.n)
          return g ? (g.d = f, u.b.push(g)) : u.d = f, u;
        _("Helper start and end don't match", n, b.index + b[0].length);
      } else if (E === "b") {
        g ? (g.d = f, u.b.push(g)) : u.d = f;
        var A = w.n || "";
        t.async && W.test(A) && (w.a = !0, w.n = A.replace(W, "")), g = w, f = [];
      } else if (E === "s") {
        var N = w.n || "";
        t.async && W.test(N) && (w.a = !0, w.n = N.replace(W, "")), f.push(w);
      } else
        f.push(w);
    }
    if (p)
      C(n.slice(s, n.length), !1), u.d = f;
    else
      throw M('unclosed helper "' + u.n + '"');
    return u;
  }
  var a = c({ f: [] }, !0);
  if (t.plugins)
    for (var d = 0; d < t.plugins.length; d++) {
      var y = t.plugins[d];
      y.processAST && (a.d = y.processAST(a.d, t));
    }
  return a.d;
}
function kt(n, t) {
  var e = Kt(n, t), r = "var tR='';" + (t.useWith ? "with(" + t.varName + "||{}){" : "") + z(e, t) + "if(cb){cb(null,tR)} return tR" + (t.useWith ? "}" : "");
  if (t.plugins)
    for (var o = 0; o < t.plugins.length; o++) {
      var i = t.plugins[o];
      i.processFnString && (r = i.processFnString(r, t));
    }
  return r;
}
function rt(n, t) {
  for (var e = 0; e < t.length; e++) {
    var r = t[e][0], o = t[e][1], i = t[e][2];
    n = (i ? "await " : "") + "c.l('F','" + r + "')(" + n, o && (n += "," + o), n += ")";
  }
  return n;
}
function Pt(n, t, e, r, o, i) {
  var s = "{exec:" + (o ? "async " : "") + At(e, t, n) + ",params:[" + r + "]";
  return i && (s += ",name:'" + i + "'"), o && (s += ",async:true"), s += "}", s;
}
function te(n, t) {
  for (var e = "[", r = 0; r < n.length; r++) {
    var o = n[r];
    e += Pt(t, o.res || "", o.d, o.p || "", o.a, o.n), r < n.length && (e += ",");
  }
  return e += "]", e;
}
function At(n, t, e) {
  return "function(" + t + "){var tR='';" + z(n, e) + "return tR}";
}
function z(n, t) {
  var e = 0, r = n.length, o = "";
  for (e; e < r; e++) {
    var i = n[e];
    if (typeof i == "string") {
      var s = i;
      o += "tR+='" + s + "';";
    } else {
      var l = i.t, h = i.c || "", c = i.f, a = i.n || "", d = i.p || "", y = i.res || "", u = i.b, p = !!i.a;
      if (l === "i") {
        t.defaultFilter && (h = "c.l('F','" + t.defaultFilter + "')(" + h + ")");
        var g = rt(h, c);
        !i.raw && t.autoEscape && (g = "c.l('F','e')(" + g + ")"), o += "tR+=" + g + ";";
      } else if (l === "h")
        if (t.storage.nativeHelpers.get(a))
          o += t.storage.nativeHelpers.get(a)(i, t);
        else {
          var f = (p ? "await " : "") + "c.l('H','" + a + "')(" + Pt(t, y, i.d, d, p);
          u ? f += "," + te(u, t) : f += ",[]", f += ",c)", o += "tR+=" + rt(f, c) + ";";
        }
      else
        l === "s" ? o += "tR+=" + rt((p ? "await " : "") + "c.l('H','" + a + "')({params:[" + d + "]},[],c)", c) + ";" : l === "e" && (o += h + `
`);
    }
  }
  return o;
}
function q(n, t, e, r) {
  if (t && t.length > 0)
    throw M((r ? "Native" : "") + "Helper '" + n + "' doesn't accept blocks");
  if (e && e.length > 0)
    throw M((r ? "Native" : "") + "Helper '" + n + "' doesn't accept filters");
}
function _t(n, t, e, r, o) {
  e(n[t], t).then(function(i) {
    r += i, t === n.length - 1 ? o(r) : _t(n, t + 1, e, r, o);
  });
}
function Wt(n, t, e, r, o, i) {
  r(t[e], n[t[e]]).then(function(s) {
    o += s, e === t.length - 1 ? i(o) : Wt(n, t, e + 1, r, o, i);
  });
}
var ee = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function re(n) {
  return ee[n];
}
function ne(n) {
  var t = String(n);
  return /[&<>"']/.test(t) ? t.replace(/[&<>"']/g, re) : t;
}
var oe = new Q({}), ut = new Q({
  each: function(n, t) {
    var e = "", r = n.params[0];
    if (q("each", t, !1), n.async)
      return new Promise(function(i) {
        _t(r, 0, n.exec, e, i);
      });
    for (var o = 0; o < r.length; o++)
      e += n.exec(r[o], o);
    return e;
  },
  foreach: function(n, t) {
    var e = n.params[0];
    if (q("foreach", t, !1), n.async)
      return new Promise(function(i) {
        Wt(e, Object.keys(e), 0, n.exec, "", i);
      });
    var r = "";
    for (var o in e)
      Ht(e, o) && (r += n.exec(o, e[o]));
    return r;
  },
  include: function(n, t, e) {
    q("include", t, !1);
    var r = e.storage.templates.get(n.params[0]);
    if (!r)
      throw M('Could not fetch template "' + n.params[0] + '"');
    return r(n.params[1], e);
  },
  extends: function(n, t, e) {
    var r = n.params[1] || {};
    r.content = n.exec();
    for (var o = 0; o < t.length; o++) {
      var i = t[o];
      r[i.name] = i.exec();
    }
    var s = e.storage.templates.get(n.params[0]);
    if (!s)
      throw M('Could not fetch template "' + n.params[0] + '"');
    return s(r, e);
  },
  useScope: function(n, t) {
    return q("useScope", t, !1), n.exec(n.params[0]);
  }
}), ie = new Q({
  if: function(n, t) {
    q("if", !1, n.f, !0);
    var e = "if(" + n.p + "){" + z(n.d, t) + "}";
    if (n.b)
      for (var r = 0; r < n.b.length; r++) {
        var o = n.b[r];
        o.n === "else" ? e += "else{" + z(o.d, t) + "}" : o.n === "elif" && (e += "else if(" + o.p + "){" + z(o.d, t) + "}");
      }
    return e;
  },
  try: function(n, t) {
    if (q("try", !1, n.f, !0), !n.b || n.b.length !== 1 || n.b[0].n !== "catch")
      throw M("native helper 'try' only accepts 1 block, 'catch'");
    var e = "try{" + z(n.d, t) + "}", r = n.b[0];
    return e += "catch" + (r.res ? "(" + r.res + ")" : "") + "{" + z(r.d, t) + "}", e;
  },
  block: function(n, t) {
    q("block", n.b, n.f, !0);
    var e = "if(!" + t.varName + "[" + n.p + "]){tR+=(" + At(n.d, "", t) + ")()}else{tR+=" + t.varName + "[" + n.p + "]}";
    return e;
  }
}), se = new Q({ e: ne }), at = {
  varName: "it",
  autoTrim: [!1, "nl"],
  autoEscape: !0,
  defaultFilter: !1,
  tags: ["{{", "}}"],
  l: function(n, t) {
    if (n === "H") {
      var e = this.storage.helpers.get(t);
      if (e)
        return e;
      throw M("Can't find helper '" + t + "'");
    } else if (n === "F") {
      var r = this.storage.filters.get(t);
      if (r)
        return r;
      throw M("Can't find filter '" + t + "'");
    }
  },
  async: !1,
  storage: {
    helpers: ut,
    nativeHelpers: ie,
    filters: se,
    templates: oe
  },
  prefixes: {
    h: "@",
    b: "#",
    i: "",
    r: "*",
    c: "/",
    e: "!"
  },
  cache: !1,
  plugins: [],
  useWith: !1
};
at.l.bind(at);
function K(n, t) {
  var e = {};
  return D(e, at), t && D(e, t), n && D(e, n), e.l.bind(e), e;
}
function gt(n, t) {
  var e = K(t || {}), r = Function;
  if (e.async)
    if (st)
      r = st;
    else
      throw M("This environment doesn't support async/await");
  try {
    return new r(
      e.varName,
      "c",
      // SqrlConfig
      "cb",
      // optional callback
      kt(n, e)
    );
  } catch (o) {
    throw o instanceof SyntaxError ? M(`Bad template syntax

` + o.message + `
` + Array(o.message.length + 1).join("=") + `
` + kt(n, e)) : o;
  }
}
var lt = It, nt = It, ae = /^\uFEFF/;
function ot(n, t, e) {
  var r = nt.resolve(
    e ? t : nt.dirname(t),
    // returns directory the parent file is in
    n
    // file
  ), o = nt.extname(n);
  return o || (r += ".sqrl"), r;
}
function le(n, t) {
  var e, r, o = t.views, i = /^[A-Za-z]+:\\|^\//.exec(n);
  if (i && i.length)
    e = ot(n.replace(/^\/*/, ""), t.root || "/", !0);
  else if (t.filename && (r = ot(n, t.filename), lt.existsSync(r) && (e = r)), e || Array.isArray(o) && o.some(function(s) {
    return r = ot(n, s, !0), lt.existsSync(r);
  }) && (e = r), !e)
    throw M('Could not find the include file "' + n + '"');
  return e;
}
function $t(n) {
  return lt.readFileSync(n).toString().replace(ae, "");
}
function ce(n, t) {
  var e = K(t), r = $t(n);
  try {
    var o = gt(r, e);
    return e.storage.templates.define(e.filename, o), o;
  } catch {
    throw M("Loading file: " + n + " failed");
  }
}
function he(n) {
  var t = n.filename;
  if (n.cache) {
    var e = n.storage.templates.get(t);
    return e || ce(t, n);
  }
  return gt($t(t), n);
}
function zt(n, t) {
  var e = K({ filename: le(n, t) }, t);
  return he(e);
}
function de(n, t, e) {
  if (t && t.length > 0)
    throw M("Helper 'includeFile' doesn't accept blocks");
  return zt(n.params[0], e)(n.params[1], e);
}
function pe(n, t, e) {
  var r = n.params[1] || {};
  r.content = n.exec();
  for (var o = 0; o < t.length; o++) {
    var i = t[o];
    r[i.name] = i.exec();
  }
  return zt(n.params[0], e)(r, e);
}
function it(n, t) {
  var e;
  return t.cache && t.name && t.storage.templates.get(t.name) ? t.storage.templates.get(t.name) : (typeof n == "function" ? e = n : e = gt(n, t), t.cache && t.name && t.storage.templates.define(t.name, e), e);
}
function ue(n, t, e, r) {
  var o = K(e || {});
  if (o.async) {
    var i;
    if (r)
      try {
        it(n, o)(t, o, r);
      } catch (s) {
        return r(s);
      }
    else {
      if (typeof St == "function")
        return new St(function(s, l) {
          try {
            i = it(n, o)(t, o), s(i);
          } catch (h) {
            l(h);
          }
        });
      throw M("Please provide a callback function, this env doesn't support Promises");
    }
  } else
    return it(n, o)(t, o);
}
ut.define("includeFile", de);
ut.define("extendsFile", pe);
class R extends HTMLElement {
  setStyles(t) {
    Object.keys(t).forEach((r) => {
      this.style[r] = t[r];
    });
  }
  renderHTML(t, e = {}) {
    return ue(t, { ...e });
  }
  getChild(t) {
    return this.querySelector(t);
  }
}
const ge = "onbotgo-box";
class O extends R {
  constructor() {
    super(), this.setStyles({
      fontFamily: L.typography.primary
    });
  }
}
O.tag = ge;
const Z = "onbotgo-bubble";
class ft extends R {
  constructor(t) {
    super(), this.innerHTML = t, this.innerHTML = this.isIconValid(t) ? t : L.defaultIcon;
  }
  isIconValid(t) {
    var r, o, i, s;
    if (!t)
      return !1;
    const e = new O();
    if (e.innerHTML = t, !["svg", "i", "img"].includes((o = (r = e.children[0]) == null ? void 0 : r.tagName) == null ? void 0 : o.toLowerCase()))
      return console.error(`node is not valid.
 allowed nodes: "svg", "i", "img"`), !1;
    for (let l = 0; l < e.childNodes.length; l++) {
      const h = (s = (i = e.childNodes[l]) == null ? void 0 : i.tagName) == null ? void 0 : s.toLowerCase();
      if (["script"].includes(h))
        return console.error(`Element "<${h}>" is not valid.`), !1;
    }
    return !0;
  }
}
ft.tag = Z;
const fe = (n) => ({
  [Z]: {
    display: "grid",
    "place-items": "center",
    width: "48px",
    height: "48px",
    "background-color": n.colors.primary,
    fill: "transparent",
    "border-radius": "100px",
    transition: "transform 0.1s linear"
  },
  [`${Z}:hover`]: {
    transform: "scale(1.1)"
  },
  [`${Z} > svg`]: {
    width: "28px",
    height: "28px",
    stroke: "white",
    "stroke-width": "2px",
    "border-image-width": "2"
  }
}), me = `{{ @if (it.type === "userMessage") }} {{@if(it.file)}} {{@if(it.fileType\r
==='audio')}}\r
<onbotgo-box\r
  class="from-user onbotgo-message"\r
  style="display: flex; flex-direction: row; gap: 12px"\r
>\r
  <onbotgo-box\r
    style="\r
      width: 32px;\r
      color: white;\r
      background-color: rgba(255, 255, 255, 0.2);\r
      border-radius: 100px;\r
      padding: 8px;\r
      height: 32px;\r
      box-sizing: border-box;\r
    "\r
    id="onbotgo-playAudioMessage"\r
    >{{it.iconPlayPause | safe}}</onbotgo-box\r
  >\r
  <div id="waveform" style="min-width: 100px"></div\r
></onbotgo-box>\r
{{#elif (it.fileType.includes('image'))}}\r
<onbotgo-box\r
  class="from-user onbotgo-message"\r
  style="display: flex; justify-content: center"\r
>\r
</onbotgo-box>\r
{{#else}}\r
<onbotgo-box class="from-user onbotgo-message">{{it.file.name}} </onbotgo-box>\r
{{/if}} {{#else }}\r
<onbotgo-box class="from-user onbotgo-message"></onbotgo-box>\r
{{/if}}{{/if}} {{@if(it.type === "LoadingMessage") }}\r
<onbotgo-box class="loading-api-message onbotgo-message">\r
  <onbotgo-box class="dot"></onbotgo-box>\r
  <onbotgo-box class="dot"></onbotgo-box>\r
  <onbotgo-box class="dot"></onbotgo-box>\r
  <onbotgo-box class="bg-semi-transp"></onbotgo-box>\r
</onbotgo-box>\r
{{/if}} {{@if((it.type === "apiMessage") ) }} {{@if(it.file)}} {{@if(it.fileType\r
=== 'audio')}}\r
<onbotgo-box\r
  class="from-chatbot onbotgo-message"\r
  style="display: flex; flex-direction: row; gap: 12px"\r
>\r
  <onbotgo-box\r
    style="\r
      width: 32px;\r
      color: white;\r
      background-color: rgba(255, 255, 255, 0.2);\r
      border-radius: 100px;\r
      padding: 8px;\r
      height: 32px;\r
      box-sizing: border-box;\r
    "\r
    id="onbotgo-playAudioMessage"\r
    >{{it.iconPlayPause | safe}}</onbotgo-box\r
  >\r
  <div id="waveform" style="min-width: 100px"></div\r
></onbotgo-box>\r
{{#elif(it.fileType.includes('image'))}}\r
\r
<onbotgo-box\r
  class="from-chatbot onbotgo-message"\r
  style="display: flex; justify-content: center"\r
>\r
</onbotgo-box>\r
{{#else}}\r
<onbotgo-box class="from-chatbot onbotgo-message"\r
  >{{it.file.name}}\r
</onbotgo-box>\r
{{/if}} {{#else}}\r
<onbotgo-box class="from-chatbot onbotgo-message">\r
  <onbotgo-box class="bg-semi-transp"></onbotgo-box>\r
</onbotgo-box>\r
{{ /if}} {{/if}}\r
`;
var ye = globalThis && globalThis.__awaiter || function(n, t, e, r) {
  function o(i) {
    return i instanceof e ? i : new e(function(s) {
      s(i);
    });
  }
  return new (e || (e = Promise))(function(i, s) {
    function l(a) {
      try {
        c(r.next(a));
      } catch (d) {
        s(d);
      }
    }
    function h(a) {
      try {
        c(r.throw(a));
      } catch (d) {
        s(d);
      }
    }
    function c(a) {
      a.done ? i(a.value) : o(a.value).then(l, h);
    }
    c((r = r.apply(n, t || [])).next());
  });
};
function be(n, t) {
  return ye(this, void 0, void 0, function* () {
    const e = new AudioContext({ sampleRate: t });
    return e.decodeAudioData(n).finally(() => e.close());
  });
}
function Ce(n) {
  const t = n[0];
  if (t.some((e) => e > 1 || e < -1)) {
    const e = t.length;
    let r = 0;
    for (let o = 0; o < e; o++) {
      const i = Math.abs(t[o]);
      i > r && (r = i);
    }
    for (const o of n)
      for (let i = 0; i < e; i++)
        o[i] /= r;
  }
  return n;
}
function ve(n, t) {
  return typeof n[0] == "number" && (n = [n]), Ce(n), {
    duration: t,
    length: n[0].length,
    sampleRate: n[0].length / t,
    numberOfChannels: n.length,
    getChannelData: (e) => n == null ? void 0 : n[e],
    copyFromChannel: AudioBuffer.prototype.copyFromChannel,
    copyToChannel: AudioBuffer.prototype.copyToChannel
  };
}
const Et = {
  decode: be,
  createBuffer: ve
};
var Lt = globalThis && globalThis.__awaiter || function(n, t, e, r) {
  function o(i) {
    return i instanceof e ? i : new e(function(s) {
      s(i);
    });
  }
  return new (e || (e = Promise))(function(i, s) {
    function l(a) {
      try {
        c(r.next(a));
      } catch (d) {
        s(d);
      }
    }
    function h(a) {
      try {
        c(r.throw(a));
      } catch (d) {
        s(d);
      }
    }
    function c(a) {
      a.done ? i(a.value) : o(a.value).then(l, h);
    }
    c((r = r.apply(n, t || [])).next());
  });
};
function xe(n, t, e) {
  var r, o;
  return Lt(this, void 0, void 0, function* () {
    const i = yield fetch(n, e);
    {
      const s = (r = i.clone().body) === null || r === void 0 ? void 0 : r.getReader(), l = Number((o = i.headers) === null || o === void 0 ? void 0 : o.get("Content-Length"));
      let h = 0;
      const c = (a, d) => Lt(this, void 0, void 0, function* () {
        if (a)
          return;
        h += (d == null ? void 0 : d.length) || 0;
        const y = Math.round(h / l * 100);
        return t(y), s == null ? void 0 : s.read().then(({ done: u, value: p }) => c(u, p));
      });
      s == null || s.read().then(({ done: a, value: d }) => c(a, d));
    }
    return i.blob();
  });
}
const we = {
  fetchBlob: xe
};
class mt {
  constructor() {
    this.listeners = {};
  }
  /** Subscribe to an event. Returns an unsubscribe function. */
  on(t, e) {
    return this.listeners[t] || (this.listeners[t] = /* @__PURE__ */ new Set()), this.listeners[t].add(e), () => this.un(t, e);
  }
  /** Subscribe to an event only once */
  once(t, e) {
    const r = this.on(t, e), o = this.on(t, () => {
      r(), o();
    });
    return r;
  }
  /** Unsubscribe from an event */
  un(t, e) {
    this.listeners[t] && (e ? this.listeners[t].delete(e) : delete this.listeners[t]);
  }
  /** Clear all events */
  unAll() {
    this.listeners = {};
  }
  /** Emit an event */
  emit(t, ...e) {
    this.listeners[t] && this.listeners[t].forEach((r) => r(...e));
  }
}
class Se extends mt {
  constructor(t) {
    super(), t.media ? this.media = t.media : this.media = document.createElement("audio"), t.mediaControls && (this.media.controls = !0), t.autoplay && (this.media.autoplay = !0), t.playbackRate != null && this.onceMediaEvent("canplay", () => {
      t.playbackRate != null && (this.media.playbackRate = t.playbackRate);
    });
  }
  onMediaEvent(t, e, r) {
    return this.media.addEventListener(t, e, r), () => this.media.removeEventListener(t, e);
  }
  onceMediaEvent(t, e) {
    return this.onMediaEvent(t, e, { once: !0 });
  }
  getSrc() {
    return this.media.currentSrc || this.media.src || "";
  }
  revokeSrc() {
    const t = this.getSrc();
    t.startsWith("blob:") && URL.revokeObjectURL(t);
  }
  setSrc(t, e) {
    if (this.getSrc() === t)
      return;
    this.revokeSrc();
    const o = e instanceof Blob ? URL.createObjectURL(e) : t;
    this.media.src = o, this.media.load();
  }
  destroy() {
    this.media.pause(), this.revokeSrc(), this.media.src = "", this.media.load();
  }
  /** Start playing the audio */
  play() {
    return this.media.play();
  }
  /** Pause the audio */
  pause() {
    this.media.pause();
  }
  /** Check if the audio is playing */
  isPlaying() {
    return this.media.currentTime > 0 && !this.media.paused && !this.media.ended;
  }
  /** Jumpt to a specific time in the audio (in seconds) */
  setTime(t) {
    this.media.currentTime = t;
  }
  /** Get the duration of the audio in seconds */
  getDuration() {
    return this.media.duration;
  }
  /** Get the current audio position in seconds */
  getCurrentTime() {
    return this.media.currentTime;
  }
  /** Get the audio volume */
  getVolume() {
    return this.media.volume;
  }
  /** Set the audio volume */
  setVolume(t) {
    this.media.volume = t;
  }
  /** Get the audio muted state */
  getMuted() {
    return this.media.muted;
  }
  /** Mute or unmute the audio */
  setMuted(t) {
    this.media.muted = t;
  }
  /** Get the playback speed */
  getPlaybackRate() {
    return this.media.playbackRate;
  }
  /** Set the playback speed, pass an optional false to NOT preserve the pitch */
  setPlaybackRate(t, e) {
    e != null && (this.media.preservesPitch = e), this.media.playbackRate = t;
  }
  /** Get the HTML media element */
  getMediaElement() {
    return this.media;
  }
  /** Set a sink id to change the audio output device */
  setSinkId(t) {
    return this.media.setSinkId(t);
  }
}
function Me(n, t, e, r, o = 5) {
  let i = () => {
  };
  if (!n)
    return i;
  const s = (l) => {
    if (l.button === 2)
      return;
    l.preventDefault(), l.stopPropagation();
    let h = l.clientX, c = l.clientY, a = !1;
    const d = (p) => {
      p.preventDefault(), p.stopPropagation();
      const g = p.clientX, f = p.clientY;
      if (a || Math.abs(g - h) >= o || Math.abs(f - c) >= o) {
        const { left: C, top: b } = n.getBoundingClientRect();
        a || (a = !0, e == null || e(h - C, c - b)), t(g - h, f - c, g - C, f - b), h = g, c = f;
      }
    }, y = (p) => {
      a && (p.preventDefault(), p.stopPropagation());
    }, u = () => {
      a && (r == null || r()), i();
    };
    document.addEventListener("pointermove", d), document.addEventListener("pointerup", u), document.addEventListener("pointerleave", u), document.addEventListener("click", y, !0), i = () => {
      document.removeEventListener("pointermove", d), document.removeEventListener("pointerup", u), document.removeEventListener("pointerleave", u), setTimeout(() => {
        document.removeEventListener("click", y, !0);
      }, 10);
    };
  };
  return n.addEventListener("pointerdown", s), () => {
    i(), n.removeEventListener("pointerdown", s);
  };
}
class tt extends mt {
  constructor(t, e) {
    super(), this.timeouts = [], this.isScrolling = !1, this.audioData = null, this.resizeObserver = null, this.isDragging = !1, this.options = t;
    let r;
    if (typeof t.container == "string" ? r = document.querySelector(t.container) : t.container instanceof HTMLElement && (r = t.container), !r)
      throw new Error("Container not found");
    this.parent = r;
    const [o, i] = this.initHtml();
    r.appendChild(o), this.container = o, this.scrollContainer = i.querySelector(".scroll"), this.wrapper = i.querySelector(".wrapper"), this.canvasWrapper = i.querySelector(".canvases"), this.progressWrapper = i.querySelector(".progress"), this.cursor = i.querySelector(".cursor"), e && i.appendChild(e), this.initEvents();
  }
  initEvents() {
    this.wrapper.addEventListener("click", (e) => {
      const r = this.wrapper.getBoundingClientRect(), i = (e.clientX - r.left) / r.width;
      this.emit("click", i);
    }), this.options.dragToSeek && this.initDrag(), this.scrollContainer.addEventListener("scroll", () => {
      const { scrollLeft: e, scrollWidth: r, clientWidth: o } = this.scrollContainer, i = e / r, s = (e + o) / r;
      this.emit("scroll", i, s);
    });
    const t = this.createDelay(100);
    this.resizeObserver = new ResizeObserver(() => {
      t(() => this.reRender());
    }), this.resizeObserver.observe(this.scrollContainer);
  }
  initDrag() {
    Me(
      this.wrapper,
      // On drag
      (t, e, r) => {
        this.emit("drag", Math.max(0, Math.min(1, r / this.wrapper.getBoundingClientRect().width)));
      },
      // On start drag
      () => this.isDragging = !0,
      // On end drag
      () => this.isDragging = !1
    );
  }
  getHeight() {
    return this.options.height == null ? 128 : isNaN(Number(this.options.height)) ? this.options.height === "auto" && this.parent.clientHeight || 128 : Number(this.options.height);
  }
  initHtml() {
    const t = document.createElement("div"), e = t.attachShadow({ mode: "open" });
    return e.innerHTML = `
      <style>
        :host {
          user-select: none;
        }
        :host audio {
          display: block;
          width: 100%;
        }
        :host .scroll {
          overflow-x: auto;
          overflow-y: hidden;
          width: 100%;
          position: relative;
          touch-action: none;
        }
        :host .noScrollbar {
          scrollbar-color: transparent;
          scrollbar-width: none;
        }
        :host .noScrollbar::-webkit-scrollbar {
          display: none;
          -webkit-appearance: none;
        }
        :host .wrapper {
          position: relative;
          overflow: visible;
          z-index: 2;
        }
        :host .canvases {
          min-height: ${this.getHeight()}px;
        }
        :host .canvases > div {
          position: relative;
        }
        :host canvas {
          display: block;
          position: absolute;
          top: 0;
          image-rendering: pixelated;
        }
        :host .progress {
          pointer-events: none;
          position: absolute;
          z-index: 2;
          top: 0;
          left: 0;
          width: 0;
          height: 100%;
          overflow: hidden;
        }
        :host .progress > div {
          position: relative;
        }
        :host .cursor {
          pointer-events: none;
          position: absolute;
          z-index: 5;
          top: 0;
          left: 0;
          height: 100%;
          border-radius: 2px;
        }
      </style>

      <div class="scroll" part="scroll">
        <div class="wrapper">
          <div class="canvases"></div>
          <div class="progress" part="progress"></div>
          <div class="cursor" part="cursor"></div>
        </div>
      </div>
    `, [t, e];
  }
  setOptions(t) {
    this.options = t, this.reRender();
  }
  getWrapper() {
    return this.wrapper;
  }
  getScroll() {
    return this.scrollContainer.scrollLeft;
  }
  destroy() {
    var t;
    this.container.remove(), (t = this.resizeObserver) === null || t === void 0 || t.disconnect();
  }
  createDelay(t = 10) {
    const e = {};
    return this.timeouts.push(e), (r) => {
      e.timeout && clearTimeout(e.timeout), e.timeout = setTimeout(r, t);
    };
  }
  // Convert array of color values to linear gradient
  convertColorValues(t) {
    if (!Array.isArray(t))
      return t || "";
    if (t.length < 2)
      return t[0] || "";
    const e = document.createElement("canvas"), o = e.getContext("2d").createLinearGradient(0, 0, 0, e.height), i = 1 / (t.length - 1);
    return t.forEach((s, l) => {
      const h = l * i;
      o.addColorStop(h, s);
    }), o;
  }
  renderBarWaveform(t, e, r, o) {
    const i = t[0], s = t[1] || t[0], l = i.length, { width: h, height: c } = r.canvas, a = c / 2, d = window.devicePixelRatio || 1, y = e.barWidth ? e.barWidth * d : 1, u = e.barGap ? e.barGap * d : e.barWidth ? y / 2 : 0, p = e.barRadius || 0, g = h / (y + u) / l, f = p && "roundRect" in r ? "roundRect" : "rect";
    r.beginPath();
    let C = 0, b = 0, v = 0;
    for (let k = 0; k <= l; k++) {
      const x = Math.round(k * g);
      if (x > C) {
        const w = Math.round(b * a * o), E = Math.round(v * a * o), P = w + E || 1;
        let A = a - w;
        e.barAlign === "top" ? A = 0 : e.barAlign === "bottom" && (A = c - P), r[f](C * (y + u), A, y, P, p), C = x, b = 0, v = 0;
      }
      const S = Math.abs(i[k] || 0), T = Math.abs(s[k] || 0);
      S > b && (b = S), T > v && (v = T);
    }
    r.fill(), r.closePath();
  }
  renderLineWaveform(t, e, r, o) {
    const i = (s) => {
      const l = t[s] || t[0], h = l.length, { height: c } = r.canvas, a = c / 2, d = r.canvas.width / h;
      r.moveTo(0, a);
      let y = 0, u = 0;
      for (let p = 0; p <= h; p++) {
        const g = Math.round(p * d);
        if (g > y) {
          const C = Math.round(u * a * o) || 1, b = a + C * (s === 0 ? -1 : 1);
          r.lineTo(y, b), y = g, u = 0;
        }
        const f = Math.abs(l[p] || 0);
        f > u && (u = f);
      }
      r.lineTo(y, a);
    };
    r.beginPath(), i(0), i(1), r.fill(), r.closePath();
  }
  renderWaveform(t, e, r) {
    if (r.fillStyle = this.convertColorValues(e.waveColor), e.renderFunction) {
      e.renderFunction(t, r);
      return;
    }
    let o = e.barHeight || 1;
    if (e.normalize) {
      const i = Array.from(t[0]).reduce((s, l) => Math.max(s, Math.abs(l)), 0);
      o = i ? 1 / i : 1;
    }
    if (e.barWidth || e.barGap || e.barAlign) {
      this.renderBarWaveform(t, e, r, o);
      return;
    }
    this.renderLineWaveform(t, e, r, o);
  }
  renderSingleCanvas(t, e, r, o, i, s, l, h) {
    const c = window.devicePixelRatio || 1, a = document.createElement("canvas"), d = t[0].length;
    a.width = Math.round(r * (s - i) / d), a.height = o * c, a.style.width = `${Math.floor(a.width / c)}px`, a.style.height = `${o}px`, a.style.left = `${Math.floor(i * r / c / d)}px`, l.appendChild(a);
    const y = a.getContext("2d");
    this.renderWaveform(t.map((g) => g.slice(i, s)), e, y);
    const u = a.cloneNode();
    h.appendChild(u);
    const p = u.getContext("2d");
    a.width > 0 && a.height > 0 && p.drawImage(a, 0, 0), p.globalCompositeOperation = "source-in", p.fillStyle = this.convertColorValues(e.progressColor), p.fillRect(0, 0, a.width, a.height);
  }
  renderChannel(t, e, r) {
    const o = document.createElement("div"), i = this.getHeight();
    o.style.height = `${i}px`, this.canvasWrapper.style.minHeight = `${i}px`, this.canvasWrapper.appendChild(o);
    const s = o.cloneNode();
    this.progressWrapper.appendChild(s);
    const { scrollLeft: l, scrollWidth: h, clientWidth: c } = this.scrollContainer, a = t[0].length, d = a / h;
    let y = Math.min(tt.MAX_CANVAS_WIDTH, c);
    if (e.barWidth || e.barGap) {
      const x = e.barWidth || 0.5, S = e.barGap || x / 2, T = x + S;
      y % T !== 0 && (y = Math.floor(y / T) * T);
    }
    const u = Math.floor(Math.abs(l) * d), p = Math.floor(u + y * d), g = p - u, f = (x, S) => {
      this.renderSingleCanvas(t, e, r, i, Math.max(0, x), Math.min(S, a), o, s);
    }, C = this.createDelay(), b = this.createDelay(), v = (x, S) => {
      f(x, S), x > 0 && C(() => {
        v(x - g, S - g);
      });
    }, k = (x, S) => {
      f(x, S), S < a && b(() => {
        k(x + g, S + g);
      });
    };
    v(u, p), p < a && k(p, p + g);
  }
  render(t) {
    this.timeouts.forEach((l) => l.timeout && clearTimeout(l.timeout)), this.timeouts = [], this.canvasWrapper.innerHTML = "", this.progressWrapper.innerHTML = "", this.wrapper.style.width = "";
    const e = window.devicePixelRatio || 1, r = this.scrollContainer.clientWidth, o = Math.ceil(t.duration * (this.options.minPxPerSec || 0));
    this.isScrolling = o > r;
    const i = this.options.fillParent && !this.isScrolling, s = (i ? r : o) * e;
    if (this.wrapper.style.width = i ? "100%" : `${o}px`, this.scrollContainer.style.overflowX = this.isScrolling ? "auto" : "hidden", this.scrollContainer.classList.toggle("noScrollbar", !!this.options.hideScrollbar), this.cursor.style.backgroundColor = `${this.options.cursorColor || this.options.progressColor}`, this.cursor.style.width = `${this.options.cursorWidth}px`, this.options.splitChannels)
      for (let l = 0; l < t.numberOfChannels; l++) {
        const h = Object.assign(Object.assign({}, this.options), this.options.splitChannels[l]);
        this.renderChannel([t.getChannelData(l)], h, s);
      }
    else {
      const l = [t.getChannelData(0)];
      t.numberOfChannels > 1 && l.push(t.getChannelData(1)), this.renderChannel(l, this.options, s);
    }
    this.audioData = t, this.emit("render");
  }
  reRender() {
    if (!this.audioData)
      return;
    const t = this.progressWrapper.clientWidth;
    this.render(this.audioData);
    const e = this.progressWrapper.clientWidth;
    this.scrollContainer.scrollLeft += e - t;
  }
  zoom(t) {
    this.options.minPxPerSec = t, this.reRender();
  }
  scrollIntoView(t, e = !1) {
    const { clientWidth: r, scrollLeft: o, scrollWidth: i } = this.scrollContainer, s = i * t, l = r / 2, h = e && this.options.autoCenter && !this.isDragging ? l : r;
    if (s > o + h || s < o)
      if (this.options.autoCenter && !this.isDragging) {
        const c = l / 20;
        s - (o + l) >= c && s < o + r ? this.scrollContainer.scrollLeft += c : this.scrollContainer.scrollLeft = s - l;
      } else
        this.isDragging ? this.scrollContainer.scrollLeft = s < o ? s - 10 : s - r + 10 : this.scrollContainer.scrollLeft = s;
    {
      const { scrollLeft: c } = this.scrollContainer, a = c / i, d = (c + r) / i;
      this.emit("scroll", a, d);
    }
  }
  renderProgress(t, e) {
    isNaN(t) || (this.progressWrapper.style.width = `${t * 100}%`, this.cursor.style.left = `${t * 100}%`, this.cursor.style.marginLeft = Math.round(t * 100) === 100 ? `-${this.options.cursorWidth}px` : "", this.isScrolling && this.options.autoScroll && this.scrollIntoView(t, e));
  }
}
tt.MAX_CANVAS_WIDTH = 4e3;
class ke extends mt {
  constructor() {
    super(...arguments), this.unsubscribe = () => {
    };
  }
  start() {
    this.unsubscribe = this.on("tick", () => {
      requestAnimationFrame(() => {
        this.emit("tick");
      });
    }), this.emit("tick");
  }
  stop() {
    this.unsubscribe();
  }
  destroy() {
    this.unsubscribe();
  }
}
var X = globalThis && globalThis.__awaiter || function(n, t, e, r) {
  function o(i) {
    return i instanceof e ? i : new e(function(s) {
      s(i);
    });
  }
  return new (e || (e = Promise))(function(i, s) {
    function l(a) {
      try {
        c(r.next(a));
      } catch (d) {
        s(d);
      }
    }
    function h(a) {
      try {
        c(r.throw(a));
      } catch (d) {
        s(d);
      }
    }
    function c(a) {
      a.done ? i(a.value) : o(a.value).then(l, h);
    }
    c((r = r.apply(n, t || [])).next());
  });
};
const Ee = {
  waveColor: "#999",
  progressColor: "#555",
  cursorWidth: 1,
  minPxPerSec: 0,
  fillParent: !0,
  interact: !0,
  dragToSeek: !1,
  autoScroll: !0,
  autoCenter: !0,
  sampleRate: 8e3
};
class et extends Se {
  /** Create a new WaveSurfer instance */
  static create(t) {
    return new et(t);
  }
  /** Create a new WaveSurfer instance */
  constructor(t) {
    var e, r;
    super({
      media: t.media,
      mediaControls: t.mediaControls,
      autoplay: t.autoplay,
      playbackRate: t.audioRate
    }), this.plugins = [], this.decodedData = null, this.subscriptions = [], this.options = Object.assign({}, Ee, t), this.timer = new ke();
    const o = t.media ? void 0 : this.getMediaElement();
    this.renderer = new tt(this.options, o), this.initPlayerEvents(), this.initRendererEvents(), this.initTimerEvents(), this.initPlugins();
    const i = this.options.url || ((e = this.options.media) === null || e === void 0 ? void 0 : e.currentSrc) || ((r = this.options.media) === null || r === void 0 ? void 0 : r.src);
    i && this.load(i, this.options.peaks, this.options.duration);
  }
  initTimerEvents() {
    this.subscriptions.push(this.timer.on("tick", () => {
      const t = this.getCurrentTime();
      this.renderer.renderProgress(t / this.getDuration(), !0), this.emit("timeupdate", t), this.emit("audioprocess", t);
    }));
  }
  initPlayerEvents() {
    this.subscriptions.push(this.onMediaEvent("timeupdate", () => {
      const t = this.getCurrentTime();
      this.renderer.renderProgress(t / this.getDuration(), this.isPlaying()), this.emit("timeupdate", t);
    }), this.onMediaEvent("play", () => {
      this.emit("play"), this.timer.start();
    }), this.onMediaEvent("pause", () => {
      this.emit("pause"), this.timer.stop();
    }), this.onMediaEvent("emptied", () => {
      this.timer.stop();
    }), this.onMediaEvent("ended", () => {
      this.emit("finish");
    }), this.onMediaEvent("seeking", () => {
      this.emit("seeking", this.getCurrentTime());
    }));
  }
  initRendererEvents() {
    this.subscriptions.push(
      // Seek on click
      this.renderer.on("click", (t) => {
        this.options.interact && (this.seekTo(t), this.emit("interaction", t * this.getDuration()), this.emit("click", t));
      }),
      // Scroll
      this.renderer.on("scroll", (t, e) => {
        const r = this.getDuration();
        this.emit("scroll", t * r, e * r);
      }),
      // Redraw
      this.renderer.on("render", () => {
        this.emit("redraw");
      })
    );
    {
      let t;
      this.subscriptions.push(this.renderer.on("drag", (e) => {
        this.options.interact && (this.renderer.renderProgress(e), clearTimeout(t), t = setTimeout(() => {
          this.seekTo(e);
        }, this.isPlaying() ? 0 : 200), this.emit("interaction", e * this.getDuration()), this.emit("drag", e));
      }));
    }
  }
  initPlugins() {
    var t;
    !((t = this.options.plugins) === null || t === void 0) && t.length && this.options.plugins.forEach((e) => {
      this.registerPlugin(e);
    });
  }
  /** Set new wavesurfer options and re-render it */
  setOptions(t) {
    this.options = Object.assign({}, this.options, t), this.renderer.setOptions(this.options), t.audioRate && this.setPlaybackRate(t.audioRate), t.mediaControls != null && (this.getMediaElement().controls = t.mediaControls);
  }
  /** Register a wavesurfer.js plugin */
  registerPlugin(t) {
    return t.init(this), this.plugins.push(t), this.subscriptions.push(t.once("destroy", () => {
      this.plugins = this.plugins.filter((e) => e !== t);
    })), t;
  }
  /** For plugins only: get the waveform wrapper div */
  getWrapper() {
    return this.renderer.getWrapper();
  }
  /** Get the current scroll position in pixels */
  getScroll() {
    return this.renderer.getScroll();
  }
  /** Get all registered plugins */
  getActivePlugins() {
    return this.plugins;
  }
  loadAudio(t, e, r, o) {
    return X(this, void 0, void 0, function* () {
      if (this.emit("load", t), this.isPlaying() && this.pause(), this.decodedData = null, !e && !r) {
        const i = (s) => this.emit("loading", s);
        e = yield we.fetchBlob(t, i, this.options.fetchParams);
      }
      if (this.setSrc(t, e), r)
        o = (yield Promise.resolve(o || this.getDuration())) || (yield new Promise((i) => {
          this.onceMediaEvent("loadedmetadata", () => i(this.getDuration()));
        })) || (yield Promise.resolve(0)), this.decodedData = Et.createBuffer(r, o);
      else if (e) {
        const i = yield e.arrayBuffer();
        this.decodedData = yield Et.decode(i, this.options.sampleRate);
      }
      this.emit("decode", this.getDuration()), this.decodedData && this.renderer.render(this.decodedData), this.emit("ready", this.getDuration());
    });
  }
  /** Load an audio file by URL, with optional pre-decoded audio data */
  load(t, e, r) {
    return X(this, void 0, void 0, function* () {
      yield this.loadAudio(t, void 0, e, r);
    });
  }
  /** Load an audio blob */
  loadBlob(t, e, r) {
    return X(this, void 0, void 0, function* () {
      yield this.loadAudio("blob", t, e, r);
    });
  }
  /** Zoom the waveform by a given pixels-per-second factor */
  zoom(t) {
    if (!this.decodedData)
      throw new Error("No audio loaded");
    this.renderer.zoom(t), this.emit("zoom", t);
  }
  /** Get the decoded audio data */
  getDecodedData() {
    return this.decodedData;
  }
  /** Get decoded peaks */
  exportPeaks({ channels: t = 1, maxLength: e = 8e3, precision: r = 1e4 } = {}) {
    if (!this.decodedData)
      throw new Error("The audio has not been decoded yet");
    const o = Math.min(t, this.decodedData.numberOfChannels), i = [];
    for (let s = 0; s < o; s++) {
      const l = this.decodedData.getChannelData(s), h = Math.min(l.length, e), c = l.length / h, a = [];
      for (let d = 0; d < h; d++) {
        const y = Math.round(d * c), u = l[y];
        a.push(Math.round(u * r) / r);
      }
      i.push(a);
    }
    return i;
  }
  /** Get the duration of the audio in seconds */
  getDuration() {
    let t = super.getDuration() || 0;
    return (t === 0 || t === 1 / 0) && this.decodedData && (t = this.decodedData.duration), t;
  }
  /** Toggle if the waveform should react to clicks */
  toggleInteraction(t) {
    this.options.interact = t;
  }
  /** Seek to a percentage of audio as [0..1] (0 = beginning, 1 = end) */
  seekTo(t) {
    const e = this.getDuration() * t;
    this.setTime(e);
  }
  /** Play or pause the audio */
  playPause() {
    return X(this, void 0, void 0, function* () {
      return this.isPlaying() ? this.pause() : this.play();
    });
  }
  /** Stop the audio and go to the beginning */
  stop() {
    this.pause(), this.setTime(0);
  }
  /** Skip N or -N seconds from the current position */
  skip(t) {
    this.setTime(this.getCurrentTime() + t);
  }
  /** Empty the waveform by loading a tiny silent audio */
  empty() {
    this.load("", [[0]], 1e-3);
  }
  /** Unmount wavesurfer */
  destroy() {
    this.emit("destroy"), this.plugins.forEach((t) => t.destroy()), this.subscriptions.forEach((t) => t()), this.timer.destroy(), this.renderer.destroy(), super.destroy();
  }
}
const ct = `<svg fill="currentColor" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" \r
	 viewBox="0 0 17.804 17.804" xml:space="preserve">\r
<g>\r
	<g id="c98_play">\r
		<path d="M2.067,0.043C2.21-0.028,2.372-0.008,2.493,0.085l13.312,8.503c0.094,0.078,0.154,0.191,0.154,0.313\r
			c0,0.12-0.061,0.237-0.154,0.314L2.492,17.717c-0.07,0.057-0.162,0.087-0.25,0.087l-0.176-0.04\r
			c-0.136-0.065-0.222-0.207-0.222-0.361V0.402C1.844,0.25,1.93,0.107,2.067,0.043z"/>\r
	</g>\r
	<g id="Capa_1_78_">\r
	</g>\r
</g>\r
</svg>`, Le = '<?xml version="1.0" ?><svg fill="currentColor" style="color:currentColor;enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><path d="M224,435.8V76.1c0-6.7-5.4-12.1-12.2-12.1h-71.6c-6.8,0-12.2,5.4-12.2,12.1v359.7c0,6.7,5.4,12.2,12.2,12.2h71.6   C218.6,448,224,442.6,224,435.8z"/><path d="M371.8,64h-71.6c-6.7,0-12.2,5.4-12.2,12.1v359.7c0,6.7,5.4,12.2,12.2,12.2h71.6c6.7,0,12.2-5.4,12.2-12.2V76.1   C384,69.4,378.6,64,371.8,64z"/></g></svg>', $ = "onbotgo-chatmessage";
class yt extends R {
  constructor(e) {
    super();
    m(this, "wavesurfer");
    m(this, "message");
    if (this.message = e, this.setStyles({
      width: "100%",
      display: "flex",
      minHeight: "max(45px, fit-content)",
      justifyContent: e.type === "userMessage" ? "flex-end" : "flex-start"
    }), this.innerHTML = this.renderHTML(me, {
      type: e.type,
      fileType: e.fileType,
      file: e.file,
      message: e.message,
      iconPlayPause: ct,
      isPlaying: !1
    }).replaceAll(`
`, " ").replace(/\n/g, " "), e.fileType === "audio") {
      let r;
      typeof e.file == "string" ? r = e.file : r = URL.createObjectURL(e.file), this.wavesurfer = et.create({
        barHeight: 12,
        height: 24,
        barWidth: 1,
        container: this.querySelector("#waveform"),
        waveColor: "rgba(255, 255, 255, 0.6)",
        progressColor: "white",
        url: r
      }), this.handlePlayPause();
    } else if (e.fileType === "image") {
      const r = document.createElement("img");
      let o = typeof e.file == "string" ? e.file : URL.createObjectURL(e.file);
      r.src = o, r.style.objectFit = "cover", r.style.minHeight = "100px", r.style.minWidth = "100px", r.style.maxHeight = "80%", r.style.maxWidth = "80%", this.querySelector(".onbotgo-message").appendChild(r);
    } else
      !e.fileType && e.type === "userMessage" ? this.querySelector(".onbotgo-message").innerText += e.message : !e.fileType && e.type === "apiMessage" && (this.querySelector(".onbotgo-message").innerHTML += e.message);
    e.type === "LoadingMessage" && this.setLoadingAnimation();
  }
  handlePlayPause() {
    this.querySelector("#onbotgo-playAudioMessage").onclick = () => {
      this.wavesurfer.play();
    }, this.wavesurfer.on("play", () => {
      this.querySelector("#onbotgo-playAudioMessage").onclick = () => {
        this.wavesurfer.pause();
      }, this.querySelector("#onbotgo-playAudioMessage").innerHTML = Le;
    }), this.wavesurfer.on("pause", () => {
      this.querySelector("#onbotgo-playAudioMessage").onclick = () => {
        this.wavesurfer.play();
      }, this.querySelector("#onbotgo-playAudioMessage").innerHTML = ct;
    });
  }
  setLoadingAnimation() {
    this.querySelectorAll(".dot").forEach(
      (e, r) => e.animate([{ transform: "translateY(-5px)", opacity: 0.2 }], {
        direction: "alternate",
        delay: r * 200,
        duration: 500,
        iterations: 1 / 0
      })
    );
  }
}
yt.tag = $;
const Te = (n) => ({
  [`${$} .onbotgo-message`]: {
    width: "fit-content !important",
    height: "fit-content",
    "border-radius": "6px",
    "align-items": "center",
    padding: "15px 15px",
    color: "white"
  },
  [`${$} > .from-chatbot`]: {
    width: "100%",
    content: "",
    overflow: "hidden",
    position: "relative",
    color: "black",
    "max-width": "75%",
    "z-index": 1
  },
  [`${$} .bg-semi-transp`]: {
    position: "absolute",
    width: "100%",
    height: "100%",
    opacity: ".1",
    top: 0,
    "z-index": "-1",
    left: 0,
    "background-color": n.colors.primary
  },
  [`${$} > .from-user`]: {
    "margin-right": "15px",
    "max-width": "70%",
    "background-color": n.colors.primary
  },
  [`${$} .loading-api-message`]: {
    position: "relative",
    "z-index": 1,
    overflow: "hidden",
    "align-items": "center",
    display: "flex !important",
    "flex-direction": "row",
    height: "17px",
    width: "40px !important",
    gap: "5px"
  },
  [`${$} .dot`]: {
    transform: "translateY(2px)",
    "border-radius": "50px",
    height: "10px",
    "background-color": n.colors.primary,
    "vertical-align": "middle",
    width: "10px !important",
    display: "inline-block"
  }
});
class Re {
  constructor() {
    m(this, "gpt_url", "https://endpoint-prod-chatgpt.mibot.cl:8080");
    m(this, "chatflowID", "");
    m(this, "welcomeMessage", "¡Hola! ¿En qué puedo ayudarte hoy?");
  }
}
const J = new Re(), Fe = async (n) => await fetch(`${J.gpt_url}/chat`, {
  headers: {
    "Content-Type": "application/json"
  },
  method: "POST",
  body: JSON.stringify(n)
}).then((t) => t.json()), Ie = `<input\r
  style="max-width: calc(100vw - 129px)"\r
  type="text"\r
  placeholder="Escribe un mensaje"\r
/>\r
<onbotgo-box style="width: 100%; display: inline-block">\r
  {{it.sendIcon | safe}}</onbotgo-box\r
>\r
`, qt = `  <svg\r
    xmlns="http://www.w3.org/2000/svg"\r
    viewBox="0 0 512 512"\r
    width="19px"\r
    class="send-icon flex"\r
    fill="currentColor"\r
  >\r
    <path\r
      d="M476.59 227.05l-.16-.07L49.35 49.84A23.56 23.56 0 0027.14 52 24.65 24.65 0 0016 72.59v113.29a24 24 0 0019.52 23.57l232.93 43.07a4 4 0 010 7.86L35.53 303.45A24 24 0 0016 327v113.31A23.57 23.57 0 0026.59 460a23.94 23.94 0 0013.22 4 24.55 24.55 0 009.52-1.93L476.4 285.94l.19-.09a32 32 0 000-58.8z"\r
    ></path>\r
  </svg>`, ht = "onbotgo-chatinput";
class bt extends R {
  constructor() {
    super();
    m(this, "defaultStyles", {
      height: "50px",
      display: "grid",
      gridTemplateColumns: "10fr 1fr",
      alignItems: "center",
      boxShadow: "0 2px 6px -1px rgba(0,0,0,.1)"
    });
    m(this, "input");
    this.innerHTML = this.renderHTML(Ie, { sendIcon: qt }), this.input = this.querySelector("input"), this.sendIcon = this.querySelector(O.tag), this.input.style.fontFamily = L.typography.primary, this.setStyles(this.defaultStyles);
  }
  onSubmit(e) {
    this.sendIcon.onclick = () => e(this.input.value), this.input.onkeydown = (r) => {
      ["13", "Enter"].includes(r.key) && (e(this.input.value), this.input.value = "");
    };
  }
}
bt.tag = ht;
const He = (n) => ({
  [`${ht} > input`]: {
    "border-radius": "6px",
    outline: "none",
    border: "none",
    height: "100%",
    padding: "0 10px"
  },
  [`${ht} svg`]: {
    cursor: "pointer",
    fill: n.colors.primary
  }
});
class Ct extends HTMLElement {
  constructor(e) {
    super();
    m(this, "container");
  }
  connectedCallback() {
    this.attachShadow({ mode: "open" }), this.targetElId = this.dataset.targetId, this.trackColor = this.dataset.trackColor || "#f2f2f2", this.trackWidth = this.dataset.trackWidth || "6px", this.thumbColor = this.dataset.thumbColor || "#c1c1c1", this.targetEl = document.querySelector("#onbotgo-messageContainer");
    const e = document.createElement("style");
    if (e.textContent = `
        .custom-scrollbar {
          width: ${this.trackWidth};
          height: 100%;
          position: absolute;
          top: 0;
          right: 0;
        }
  
        .custom-scrollbar__track {
          width: 100%;
          height: 100%;
          background-color: ${this.trackColor};
        }
  
        .custom-scrollbar__thumb {
          width: 100%;
          background-color: ${this.thumbColor};
          border-radius: ${this.trackWidth};
          position: absolute;
          top: 0;
          animation: top 0.25s ease-in;
  
        }
  
        .custom-scrollbar__thumb:hover {
          background-color: red;
        }
      `, this.shadowRoot.appendChild(e), !this.targetEl) {
      console.warn(
        `CustomScrollBar: target element with id "${this.targetElId}" not found`,
        this,
        this.dataset.targetId
      );
      return;
    }
    new IntersectionObserver((o) => {
      o.forEach((i) => {
        i.isIntersecting && (this.setTargetElCSS(), this.setScrollThumbHeight());
      });
    }).observe(this.targetEl), this.shadowRoot.innerHTML += `
        <div class="custom-scrollbar">
          <div class="custom-scrollbar__track">
            <div class="custom-scrollbar__thumb"></div>
          </div>
        </div>
      `, this.targetEl.addEventListener("scroll", () => {
      this.moveScrollThumb();
    });
  }
  moveScrollThumb() {
    const e = this.shadowRoot.querySelector(
      ".custom-scrollbar__thumb"
    ), r = this.shadowRoot.querySelector(
      ".custom-scrollbar__track"
    ).offsetHeight, o = this.targetEl.scrollTop / this.targetEl.scrollHeight * r;
    e.style.top = `${o}px`;
  }
  setTargetElCSS() {
    this.targetEl.style.overflowY = "scroll", this.targetEl.style.position = "relative", this.targetEl.style["-ms-overflow-style"] = "none", this.targetEl.style.scrollbarWidth = "none";
  }
  setScrollThumbHeight() {
    const e = this.shadowRoot.querySelector(
      ".custom-scrollbar__track"
    ), r = this.shadowRoot.querySelector(
      ".custom-scrollbar__thumb"
    ), o = e.offsetHeight, i = this.targetEl.offsetHeight, s = this.targetEl.scrollHeight, l = i / s * o;
    r.style.height = `${l}px`;
    let h = !1, c;
    r.addEventListener("mousedown", (a) => {
      h = !0, c = a.clientY, this.preventContentHighlight("remove");
    }), document.addEventListener("mouseup", () => {
      h = !1, this.preventContentHighlight("add");
    }), document.addEventListener("mousemove", (a) => {
      if (!h)
        return;
      const d = a.clientY - c;
      c = a.clientY, this.targetEl.scrollTop += d * (s / o);
    });
  }
  preventContentHighlight(e) {
    e ? this.targetEl.classList.add("prevent-scroll") : this.targetEl.classList.add("prevent-scroll");
  }
}
Ct.tag = "onbotgo-customscrollbar";
const Pe = `<onbotgo-box\r
  style="height: 85%; position: relative; overflow: hidden; margin-bottom: 15px"\r
>\r
  <onbotgo-customscrollbar\r
    style="visibility: hidden"\r
    data-target-id="scrollableElement"\r
  >\r
  </onbotgo-customscrollbar>\r
  <onbotgo-box\r
    id="onbotgo-messageContainer"\r
    style="\r
      height: calc(100% - 1.5rem);\r
      position: relative;\r
      display: flex;\r
      flex-direction: column;\r
      gap: 15px;\r
      position: relative;\r
      padding: 1rem;\r
      width: 100%;\r
    "\r
  >\r
  </onbotgo-box>\r
</onbotgo-box>\r
<onbotgo-box\r
  style="display: flex; gap: 10px; align-items: center; height: 48px"\r
>\r
  <onbotgo-box id="onbotgo-attachFileTemplateContainer"> </onbotgo-box>\r
  <onbotgo-chatinput\r
    id="onbotgo-chatinput"\r
    style="width: 100%"\r
  ></onbotgo-chatinput>\r
  <onbotgo-micrecord\r
    id="onbotgo-micrecord"\r
    style="width: 100%; display: flex; align-items: center; gap: 10px"\r
  ></onbotgo-micrecord>\r
  <onbotgo-iconbutton\r
    id="onbotgo-btnrecordSend"\r
    color="primary"\r
    size="36px"\r
    style="margin-top: 7px"\r
  >\r
    {{it.sendIcon | safe}}\r
  </onbotgo-iconbutton>\r
  <onbotgo-iconbutton\r
    id="onbotgo-btnrecord"\r
    color="primary"\r
    size="36px"\r
    style="margin-top: 7px"\r
  >\r
    {{it.micIcon | safe}}\r
  </onbotgo-iconbutton>\r
</onbotgo-box>\r
<onbotgo-box\r
  class="onbotgo-chat-footer"\r
  style="color: #a1a1a1; font-size: 10px"\r
>\r
  Powered by ONBOTGO LLC. {{it.logo | safe}}\r
</onbotgo-box>\r
`, Ae = `<onbotgo-dropdown>\r
  <input id="onbotgoAttachFileInput" type="file" style="display: none" />\r
  {{@if (it.attachedFiles.length > 0)}}\r
  <onbotgo-iconbutton\r
    color="primary"\r
    size="36px"\r
    style="margin-top: 7px"\r
    id="btnOnbotgoAttachInputMenu"\r
  >\r
    {{it.paperclipIcon | safe}}\r
    <onbotgo-box\r
      style="\r
        position: absolute;\r
        top: -3px;\r
        right: -3px;\r
        border-radius: 100px;\r
        z-index: 1;\r
        background-color: rgb(255, 43, 43);\r
        color: white;\r
        font-size: 12px;\r
        width: 16px;\r
        height: 16px;\r
        display: grid;\r
        place-items: center;\r
        opacity: 1;\r
      "\r
      >{{it.attachedFiles.length}}\r
    </onbotgo-box>\r
  </onbotgo-iconbutton>\r
  {{#else}}\r
  <onbotgo-iconbutton\r
    id="btnOnbotgoAttachInput"\r
    color="primary"\r
    size="36px"\r
    style="margin-top: 7px"\r
  >\r
    {{it.paperclipIcon | safe}}\r
  </onbotgo-iconbutton>\r
  {{ /if}}\r
  <onbotgo-box class="onbotgo-dropdown-content">\r
    {{@each(it.attachedFiles) => file}}\r
    <onbotgo-box\r
      class="onbotgo-attachedFile"\r
      style="\r
        display: flex !important;\r
        justify-content: space-between;\r
        gap: 14px;\r
      "\r
    >\r
      <span class="onbotgo-attachedFile-name">{{ file.name }}</span>\r
      <i style="width: 19px; color: red; cursor: pointer"\r
        >{{it.trashIcon | safe}}</i\r
      >\r
    </onbotgo-box>\r
    {{/each}}\r
    <onbotgo-box\r
      style="margin-top: 4px; display: flex !important; justify-content: center"\r
    >\r
      <onbotgo-fabbutton\r
        id="onbotgo-btnattachNewFile"\r
        style="margin: 0 auto"\r
        color="primary"\r
        size="20px"\r
      >\r
        {{it.iconPlus | safe}}\r
      </onbotgo-fabbutton>\r
    </onbotgo-box>\r
  </onbotgo-box>\r
</onbotgo-dropdown>\r
`, _e = `<svg\r
  version="1.1"\r
  id="Layer_1"\r
  xmlns="http://www.w3.org/2000/svg"\r
  xmlns:xlink="http://www.w3.org/1999/xlink"\r
  x="0px"\r
  y="0px"\r
  width="18px"\r
  viewBox="0 0 750 750"\r
  enable-background="new 0 0 750 750"\r
  xml:space="preserve"\r
>\r
  <path\r
    fill="#FFFFFF"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M1.000000,275.000000 \r
C1.000000,183.333328 1.000000,92.166664 1.000000,1.000000 \r
C251.000000,1.000000 501.000000,1.000000 751.000000,1.000000 \r
C751.000000,251.000000 751.000000,501.000000 751.000000,751.000000 \r
C501.000000,751.000000 251.000000,751.000000 1.000000,751.000000 \r
C1.000000,592.500000 1.000000,434.000000 1.000000,275.000000 \r
M88.022148,235.872009 \r
C88.066109,239.261810 88.110069,242.651611 88.010864,246.963760 \r
C88.007248,274.215515 87.981773,301.467316 88.006454,328.719025 \r
C88.028870,353.474365 88.105843,378.229645 88.028114,403.912079 \r
C88.070885,432.614319 88.113655,461.316589 88.011223,490.948303 \r
C88.011223,564.164307 88.011223,637.380310 88.011223,711.000000 \r
C89.651970,711.000000 90.946762,711.000000 92.241562,711.000000 \r
C173.328812,711.000000 254.416046,711.000671 335.503296,710.993347 \r
C336.664856,710.993225 337.826447,710.893311 339.740173,710.968079 \r
C340.498138,710.925598 341.256073,710.883179 342.939209,710.988770 \r
C448.829376,710.988770 554.719543,710.988770 661.000000,710.988770 \r
C661.000000,709.161926 661.000000,707.700012 661.000000,706.238037 \r
C661.000000,561.823059 661.000488,417.408081 660.993164,272.993103 \r
C660.993103,271.664703 660.890808,270.336334 660.976501,268.101013 \r
C660.929810,264.731171 660.883118,261.361298 660.988464,257.066162 \r
C660.988464,186.513000 660.988464,115.959831 660.988464,45.000008 \r
C659.334412,45.000008 658.048523,45.000008 656.762573,45.000008 \r
C567.016052,45.000011 477.269562,44.999424 387.523041,45.006451 \r
C386.361267,45.006542 385.199463,45.103436 383.107513,45.021538 \r
C376.391418,45.065651 369.675323,45.109764 362.033478,45.011021 \r
C270.770203,45.011021 179.506958,45.011021 88.000000,45.011021 \r
C88.000000,47.350853 88.000000,49.160931 88.000000,50.971008 \r
C88.000000,91.469856 87.983521,131.968719 88.006821,172.467545 \r
C88.018806,193.296692 88.101700,214.125809 88.022148,235.872009 \r
z"\r
  />\r
  <path\r
    fill="transparent"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M660.836304,269.007935 \r
C660.890808,270.336334 660.993103,271.664703 660.993164,272.993103 \r
C661.000488,417.408081 661.000000,561.823059 661.000000,706.238037 \r
C661.000000,707.700012 661.000000,709.161926 661.000000,710.988770 \r
C554.719543,710.988770 448.829376,710.988770 342.612183,710.600342 \r
C354.813660,702.671997 367.340149,695.128784 379.871277,687.593262 \r
C390.738831,681.058228 402.032745,675.130554 412.377930,667.853577 \r
C425.991974,658.277344 439.099365,647.933533 451.991119,637.389771 \r
C467.877472,624.396851 483.724030,611.299011 498.799652,597.392151 \r
C507.963715,588.938477 515.775452,578.988770 523.954712,569.504150 \r
C538.439514,552.707520 549.785095,533.937195 558.161499,513.409363 \r
C560.808716,506.921967 563.006042,500.251038 565.713440,492.830322 \r
C556.753967,498.322632 548.986145,503.390747 540.936951,507.963837 \r
C511.514709,524.679871 481.934021,541.117432 452.543457,557.888550 \r
C436.166565,567.233704 420.254089,577.406982 403.731659,586.477234 \r
C394.373016,591.614685 384.348755,596.810242 373.319977,595.728638 \r
C365.408691,594.952881 356.994965,593.025513 350.102051,589.246704 \r
C323.014618,574.396667 296.494812,558.514954 269.658997,543.200806 \r
C248.319962,531.023499 226.986938,518.818237 205.347137,507.191376 \r
C191.095123,499.533875 178.414276,489.886475 166.639206,479.022278 \r
C149.525314,463.232361 134.769669,445.530640 123.372070,425.029327 \r
C113.442574,407.168762 105.556778,388.526306 100.080093,368.907410 \r
C96.082901,354.588440 92.839447,340.059082 89.000000,324.574951 \r
C89.000000,327.191010 89.000000,328.779877 89.000000,330.368774 \r
C89.000000,352.867493 89.018204,375.366241 88.963676,397.864838 \r
C88.959534,399.572174 88.439163,401.278290 88.158752,402.984955 \r
C88.105843,378.229645 88.028870,353.474365 88.006454,328.719025 \r
C87.981773,301.467316 88.007248,274.215515 88.402878,246.753250 \r
C89.190285,249.641891 89.560684,252.744476 89.985207,255.839630 \r
C92.304466,272.749176 94.629791,289.657898 96.966827,306.565002 \r
C100.002563,328.526855 105.070808,350.047485 111.661903,371.181824 \r
C119.692017,396.930420 131.382629,420.953156 147.431259,442.692841 \r
C152.159348,449.097565 157.750427,454.865234 162.945999,460.924896 \r
C163.378723,460.675903 163.811462,460.426880 164.244186,460.177887 \r
C163.830154,457.137238 163.031525,454.092285 163.065216,451.056580 \r
C163.266144,432.947205 163.947632,414.839478 163.917236,396.732117 \r
C163.875946,372.123840 163.126129,347.516754 163.085403,322.908478 \r
C163.054611,304.302246 163.645523,285.694733 163.983414,267.088226 \r
C164.307480,249.242798 173.291382,236.313034 188.046371,227.585220 \r
C212.086807,213.364914 236.586807,199.923599 260.815887,186.019424 \r
C275.913269,177.355576 290.971710,168.614731 305.864838,159.606247 \r
C329.485443,145.318710 352.925720,130.947113 380.074188,123.713074 \r
C395.855530,119.507935 411.742645,116.007782 427.918396,115.276680 \r
C442.240356,114.629356 456.707184,115.866493 471.039856,117.092422 \r
C491.545654,118.846367 511.293640,124.429520 530.901733,130.443481 \r
C536.441589,132.142609 541.998474,133.786224 547.547546,135.455292 \r
C533.264282,126.341766 518.703918,118.120102 504.289001,109.650887 \r
C485.174622,98.420616 466.232117,86.897644 447.108307,75.683662 \r
C426.904327,63.836277 407.162476,50.987228 384.037689,45.155148 \r
C385.199463,45.103436 386.361267,45.006542 387.523041,45.006451 \r
C477.269562,44.999424 567.016052,45.000011 656.762573,45.000008 \r
C658.048523,45.000008 659.334412,45.000008 660.988464,45.000008 \r
C660.988464,115.959831 660.988464,186.513000 660.571899,257.272827 \r
C659.436462,247.123749 659.333679,236.679214 657.857422,226.432556 \r
C655.518433,210.197495 647.470215,196.708603 634.747131,186.461273 \r
C621.546448,175.829224 606.450439,168.101990 590.601685,162.458054 \r
C562.868164,152.581802 534.968567,143.071335 506.774200,134.623734 \r
C486.656555,128.596085 465.835846,125.333893 444.634064,126.005096 \r
C435.036224,126.308945 425.402802,126.258766 415.855072,127.130760 \r
C408.192749,127.830551 400.635345,129.678665 393.031372,131.017212 \r
C393.009155,131.450546 392.986938,131.883881 392.964722,132.317230 \r
C395.387238,133.431351 397.912415,134.366653 400.215668,135.688614 \r
C415.218597,144.299500 430.162628,153.012970 445.146393,161.657379 \r
C469.041748,175.443008 492.978973,189.156326 516.848450,202.986588 \r
C532.235535,211.902039 547.656616,220.770020 562.826843,230.044632 \r
C572.702698,236.082397 579.474243,244.993774 581.815308,256.380554 \r
C583.589539,265.010529 584.539185,273.903809 584.850159,282.715363 \r
C585.182129,292.123596 584.142395,301.571320 584.033936,311.005615 \r
C583.617065,347.260956 583.476990,383.520020 582.925842,419.773010 \r
C582.720032,433.310852 582.098938,446.874725 580.874756,460.354767 \r
C579.842102,471.726074 578.132507,483.087952 575.875610,494.283264 \r
C572.868408,509.200439 567.639160,523.533936 560.394043,536.875549 \r
C552.190308,551.982361 542.795227,566.437073 530.660217,578.808472 \r
C518.547241,591.157471 506.144348,603.222229 494.044006,615.583374 \r
C490.815613,618.881287 488.229584,622.807983 485.348663,626.446045 \r
C491.547546,621.735901 498.563354,617.728394 505.598969,613.756104 \r
C529.489624,600.267334 553.431519,586.868713 577.266846,573.283081 \r
C593.570557,563.990295 609.949951,554.798584 625.882996,544.897827 \r
C638.626770,536.978821 649.122620,526.673767 654.473633,512.071960 \r
C658.715393,500.497162 659.443359,488.313690 659.812927,476.268036 \r
C660.265198,461.528809 659.140503,446.748413 659.044739,431.983582 \r
C658.884705,407.300842 658.873840,382.615417 659.040283,357.932770 \r
C659.166809,339.169373 659.719177,320.409210 659.977661,301.646179 \r
C660.106140,292.317657 659.961853,282.985565 660.037415,273.655884 \r
C660.050049,272.104523 660.557556,270.557159 660.836304,269.007935 \r
M339.001434,209.498001 \r
C332.685333,213.152039 326.330139,216.740326 320.060333,220.472153 \r
C299.299225,232.829269 278.578827,245.254822 257.823700,257.622040 \r
C240.037231,268.220337 230.149826,283.648712 230.059875,304.524628 \r
C229.865326,349.677246 230.046677,394.831390 229.906082,439.984375 \r
C229.895508,443.378235 230.973923,445.314972 233.739502,446.991974 \r
C251.767258,457.923615 269.707184,469.000000 287.726074,479.946381 \r
C320.565491,499.896088 353.432709,519.800232 386.308350,539.690186 \r
C390.617188,542.297058 395.044006,544.708923 400.000000,547.545227 \r
C400.000000,534.663208 399.855957,522.836243 400.138153,511.019440 \r
C400.186646,508.988983 401.519684,506.082153 403.157440,505.138031 \r
C418.337189,496.387085 433.702057,487.956421 449.036469,479.474884 \r
C468.059143,468.953369 487.075012,458.418854 506.161682,448.014435 \r
C510.338379,445.737701 512.194275,443.093658 512.164490,437.858551 \r
C511.886688,389.041107 512.138977,340.220764 511.902710,291.402863 \r
C511.843323,279.133850 506.774170,268.528107 498.766693,259.164154 \r
C490.816589,249.867325 479.774414,245.478973 469.485229,239.949310 \r
C444.881744,226.726791 420.104919,213.826996 395.409485,200.775330 \r
C389.522583,197.664078 383.451447,194.816299 377.910095,191.170822 \r
C374.946442,189.221176 372.921173,189.248917 370.123901,190.941299 \r
C360.003204,197.064438 349.788422,203.032059 339.001434,209.498001 \r
z"\r
  />\r
  <path\r
    fill="#3B88F4"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M88.093430,403.448517 \r
C88.439163,401.278290 88.959534,399.572174 88.963676,397.864838 \r
C89.018204,375.366241 89.000000,352.867493 89.000000,330.368774 \r
C89.000000,328.779877 89.000000,327.191010 89.000000,324.574951 \r
C92.839447,340.059082 96.082901,354.588440 100.080093,368.907410 \r
C105.556778,388.526306 113.442574,407.168762 123.372070,425.029327 \r
C134.769669,445.530640 149.525314,463.232361 166.639206,479.022278 \r
C178.414276,489.886475 191.095123,499.533875 205.347137,507.191376 \r
C226.986938,518.818237 248.319962,531.023499 269.658997,543.200806 \r
C296.494812,558.514954 323.014618,574.396667 350.102051,589.246704 \r
C356.994965,593.025513 365.408691,594.952881 373.319977,595.728638 \r
C384.348755,596.810242 394.373016,591.614685 403.731659,586.477234 \r
C420.254089,577.406982 436.166565,567.233704 452.543457,557.888550 \r
C481.934021,541.117432 511.514709,524.679871 540.936951,507.963837 \r
C548.986145,503.390747 556.753967,498.322632 565.713440,492.830322 \r
C563.006042,500.251038 560.808716,506.921967 558.161499,513.409363 \r
C549.785095,533.937195 538.439514,552.707520 523.954712,569.504150 \r
C515.775452,578.988770 507.963715,588.938477 498.799652,597.392151 \r
C483.724030,611.299011 467.877472,624.396851 451.991119,637.389771 \r
C439.099365,647.933533 425.991974,658.277344 412.377930,667.853577 \r
C402.032745,675.130554 390.738831,681.058228 379.871277,687.593262 \r
C367.340149,695.128784 354.813660,702.671997 342.149597,710.526245 \r
C341.256073,710.883179 340.498138,710.925598 339.368835,710.446899 \r
C338.998291,698.265625 338.881378,686.603638 339.071228,674.946533 \r
C339.128754,671.413513 338.390930,669.317444 334.764679,667.820618 \r
C329.523590,665.657288 324.549042,662.771912 319.643890,659.883667 \r
C294.297424,644.958618 269.131317,629.723389 243.666870,615.003662 \r
C217.624802,599.949890 191.421112,585.166382 165.076874,570.647888 \r
C146.690262,560.514832 128.040314,550.794678 111.546669,537.709595 \r
C102.050766,530.176147 94.851891,520.595764 92.008911,508.416321 \r
C90.585037,502.316437 89.431969,496.153351 88.156425,490.018829 \r
C88.113655,461.316589 88.070885,432.614319 88.093430,403.448517 \r
z"\r
  />\r
  <path\r
    fill="#32A850"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M383.572601,45.088341 \r
C407.162476,50.987228 426.904327,63.836277 447.108307,75.683662 \r
C466.232117,86.897644 485.174622,98.420616 504.289001,109.650887 \r
C518.703918,118.120102 533.264282,126.341766 547.547546,135.455292 \r
C541.998474,133.786224 536.441589,132.142609 530.901733,130.443481 \r
C511.293640,124.429520 491.545654,118.846367 471.039856,117.092422 \r
C456.707184,115.866493 442.240356,114.629356 427.918396,115.276680 \r
C411.742645,116.007782 395.855530,119.507935 380.074188,123.713074 \r
C352.925720,130.947113 329.485443,145.318710 305.864838,159.606247 \r
C290.971710,168.614731 275.913269,177.355576 260.815887,186.019424 \r
C236.586807,199.923599 212.086807,213.364914 188.046371,227.585220 \r
C173.291382,236.313034 164.307480,249.242798 163.983414,267.088226 \r
C163.645523,285.694733 163.054611,304.302246 163.085403,322.908478 \r
C163.126129,347.516754 163.875946,372.123840 163.917236,396.732117 \r
C163.947632,414.839478 163.266144,432.947205 163.065216,451.056580 \r
C163.031525,454.092285 163.830154,457.137238 164.244186,460.177887 \r
C163.811462,460.426880 163.378723,460.675903 162.945999,460.924896 \r
C157.750427,454.865234 152.159348,449.097565 147.431259,442.692841 \r
C131.382629,420.953156 119.692017,396.930420 111.661903,371.181824 \r
C105.070808,350.047485 100.002563,328.526855 96.966827,306.565002 \r
C94.629791,289.657898 92.304466,272.749176 89.985207,255.839630 \r
C89.560684,252.744476 89.190285,249.641891 88.474457,246.292084 \r
C88.110069,242.651611 88.066109,239.261810 88.408829,235.161133 \r
C89.653336,211.424240 99.461922,193.358643 119.043915,181.049942 \r
C132.237259,172.756958 145.615982,164.737106 159.150604,157.013580 \r
C183.551834,143.089035 208.243027,129.671341 232.604355,115.678505 \r
C254.099243,103.332130 275.279449,90.439117 296.653839,77.881470 \r
C317.957275,65.365509 338.669800,51.629372 362.959229,45.153877 \r
C369.675323,45.109764 376.391418,45.065651 383.572601,45.088341 \r
z"\r
  />\r
  <path\r
    fill="#EA4033"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M660.906372,268.554474 \r
C660.557556,270.557159 660.050049,272.104523 660.037415,273.655884 \r
C659.961853,282.985565 660.106140,292.317657 659.977661,301.646179 \r
C659.719177,320.409210 659.166809,339.169373 659.040283,357.932770 \r
C658.873840,382.615417 658.884705,407.300842 659.044739,431.983582 \r
C659.140503,446.748413 660.265198,461.528809 659.812927,476.268036 \r
C659.443359,488.313690 658.715393,500.497162 654.473633,512.071960 \r
C649.122620,526.673767 638.626770,536.978821 625.882996,544.897827 \r
C609.949951,554.798584 593.570557,563.990295 577.266846,573.283081 \r
C553.431519,586.868713 529.489624,600.267334 505.598969,613.756104 \r
C498.563354,617.728394 491.547546,621.735901 485.348663,626.446045 \r
C488.229584,622.807983 490.815613,618.881287 494.044006,615.583374 \r
C506.144348,603.222229 518.547241,591.157471 530.660217,578.808472 \r
C542.795227,566.437073 552.190308,551.982361 560.394043,536.875549 \r
C567.639160,523.533936 572.868408,509.200439 575.875610,494.283264 \r
C578.132507,483.087952 579.842102,471.726074 580.874756,460.354767 \r
C582.098938,446.874725 582.720032,433.310852 582.925842,419.773010 \r
C583.476990,383.520020 583.617065,347.260956 584.033936,311.005615 \r
C584.142395,301.571320 585.182129,292.123596 584.850159,282.715363 \r
C584.539185,273.903809 583.589539,265.010529 581.815308,256.380554 \r
C579.474243,244.993774 572.702698,236.082397 562.826843,230.044632 \r
C547.656616,220.770020 532.235535,211.902039 516.848450,202.986588 \r
C492.978973,189.156326 469.041748,175.443008 445.146393,161.657379 \r
C430.162628,153.012970 415.218597,144.299500 400.215668,135.688614 \r
C397.912415,134.366653 395.387238,133.431351 392.964722,132.317230 \r
C392.986938,131.883881 393.009155,131.450546 393.031372,131.017212 \r
C400.635345,129.678665 408.192749,127.830551 415.855072,127.130760 \r
C425.402802,126.258766 435.036224,126.308945 444.634064,126.005096 \r
C465.835846,125.333893 486.656555,128.596085 506.774200,134.623734 \r
C534.968567,143.071335 562.868164,152.581802 590.601685,162.458054 \r
C606.450439,168.101990 621.546448,175.829224 634.747131,186.461273 \r
C647.470215,196.708603 655.518433,210.197495 657.857422,226.432556 \r
C659.333679,236.679214 659.436462,247.123749 660.495850,257.735474 \r
C660.883118,261.361298 660.929810,264.731171 660.906372,268.554474 \r
z"\r
  />\r
  <path\r
    fill="transparent"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M88.083824,490.483582 \r
C89.431969,496.153351 90.585037,502.316437 92.008911,508.416321 \r
C94.851891,520.595764 102.050766,530.176147 111.546669,537.709595 \r
C128.040314,550.794678 146.690262,560.514832 165.076874,570.647888 \r
C191.421112,585.166382 217.624802,599.949890 243.666870,615.003662 \r
C269.131317,629.723389 294.297424,644.958618 319.643890,659.883667 \r
C324.549042,662.771912 329.523590,665.657288 334.764679,667.820618 \r
C338.390930,669.317444 339.128754,671.413513 339.071228,674.946533 \r
C338.881378,686.603638 338.998291,698.265625 338.992737,710.382935 \r
C337.826447,710.893311 336.664856,710.993225 335.503296,710.993347 \r
C254.416046,711.000671 173.328812,711.000000 92.241562,711.000000 \r
C90.946762,711.000000 89.651970,711.000000 88.011223,711.000000 \r
C88.011223,637.380310 88.011223,564.164307 88.083824,490.483582 \r
z"\r
  />\r
  <path\r
    fill="transparent"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M362.496338,45.082451 \r
C338.669800,51.629372 317.957275,65.365509 296.653839,77.881470 \r
C275.279449,90.439117 254.099243,103.332130 232.604355,115.678505 \r
C208.243027,129.671341 183.551834,143.089035 159.150604,157.013580 \r
C145.615982,164.737106 132.237259,172.756958 119.043915,181.049942 \r
C99.461922,193.358643 89.653336,211.424240 88.474030,234.702606 \r
C88.101700,214.125809 88.018806,193.296692 88.006821,172.467545 \r
C87.983521,131.968719 88.000000,91.469856 88.000000,50.971008 \r
C88.000000,49.160931 88.000000,47.350853 88.000000,45.011021 \r
C179.506958,45.011021 270.770203,45.011021 362.496338,45.082451 \r
z"\r
  />\r
  <path\r
    fill="#F8BF00"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M339.305298,209.278198 \r
C349.788422,203.032059 360.003204,197.064438 370.123901,190.941299 \r
C372.921173,189.248917 374.946442,189.221176 377.910095,191.170822 \r
C383.451447,194.816299 389.522583,197.664078 395.409485,200.775330 \r
C420.104919,213.826996 444.881744,226.726791 469.485229,239.949310 \r
C479.774414,245.478973 490.816589,249.867325 498.766693,259.164154 \r
C506.774170,268.528107 511.843323,279.133850 511.902710,291.402863 \r
C512.138977,340.220764 511.886688,389.041107 512.164490,437.858551 \r
C512.194275,443.093658 510.338379,445.737701 506.161682,448.014435 \r
C487.075012,458.418854 468.059143,468.953369 449.036469,479.474884 \r
C433.702057,487.956421 418.337189,496.387085 403.157440,505.138031 \r
C401.519684,506.082153 400.186646,508.988983 400.138153,511.019440 \r
C399.855957,522.836243 400.000000,534.663208 400.000000,547.545227 \r
C395.044006,544.708923 390.617188,542.297058 386.308350,539.690186 \r
C353.432709,519.800232 320.565491,499.896088 287.726074,479.946381 \r
C269.707184,469.000000 251.767258,457.923615 233.739502,446.991974 \r
C230.973923,445.314972 229.895508,443.378235 229.906082,439.984375 \r
C230.046677,394.831390 229.865326,349.677246 230.059875,304.524628 \r
C230.149826,283.648712 240.037231,268.220337 257.823700,257.622040 \r
C278.578827,245.254822 299.299225,232.829269 320.060333,220.472153 \r
C326.330139,216.740326 332.685333,213.152039 339.305298,209.278198 \r
M434.683777,322.998627 \r
C433.432404,323.315918 432.196838,323.732269 430.927155,323.934601 \r
C421.965851,325.362366 418.105682,335.934540 419.074524,341.828735 \r
C420.433807,350.098267 429.368927,358.023254 436.553192,356.885986 \r
C446.404022,355.326660 453.002350,349.320312 452.819550,339.182343 \r
C452.661957,330.440094 447.804291,323.684448 434.683777,322.998627 \r
M327.955780,343.822937 \r
C327.779602,340.539917 328.292847,337.029419 327.298553,334.016357 \r
C324.265228,324.824219 313.268433,320.300476 304.278931,324.335938 \r
C296.468933,327.841919 291.660919,337.514313 296.220612,347.394775 \r
C299.365784,354.209961 307.299225,357.696686 314.529236,356.081970 \r
C321.055634,354.624481 325.089722,350.462372 327.955780,343.822937 \r
z"\r
  />\r
  <path\r
    fill="#FFFFFF"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M435.116150,322.998901 \r
C447.804291,323.684448 452.661957,330.440094 452.819550,339.182343 \r
C453.002350,349.320312 446.404022,355.326660 436.553192,356.885986 \r
C429.368927,358.023254 420.433807,350.098267 419.074524,341.828735 \r
C418.105682,335.934540 421.965851,325.362366 430.927155,323.934601 \r
C432.196838,323.732269 433.432404,323.315918 435.116150,322.998901 \r
z"\r
  />\r
  <path\r
    fill="#FFFFFE"\r
    opacity="1.000000"\r
    stroke="none"\r
    d="\r
M327.856506,344.228943 \r
C325.089722,350.462372 321.055634,354.624481 314.529236,356.081970 \r
C307.299225,357.696686 299.365784,354.209961 296.220612,347.394775 \r
C291.660919,337.514313 296.468933,327.841919 304.278931,324.335938 \r
C313.268433,320.300476 324.265228,324.824219 327.298553,334.016357 \r
C328.292847,337.029419 327.779602,340.539917 327.856506,344.228943 \r
z"\r
  />\r
</svg>\r
`, We = ` <svg\r
    xmlns="http://www.w3.org/2000/svg"\r
    xmlns:xlink="http://www.w3.org/1999/xlink"\r
    version="1.1"\r
    viewBox="0 0 256 256"\r
    xml:space="preserve"\r
  >\r
    <defs></defs>\r
    <g\r
      style="\r
        stroke: none;\r
        stroke-width: 0;\r
        stroke-dasharray: none;\r
        stroke-linecap: butt;\r
        stroke-linejoin: miter;\r
        stroke-miterlimit: 10;\r
        fill: none;\r
        fill-rule: nonzero;\r
        opacity: 1;\r
      "\r
      transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)"\r
    >\r
      <path\r
        d="M 45 70.968 c -16.013 0 -29.042 -13.028 -29.042 -29.042 c 0 -1.712 1.388 -3.099 3.099 -3.099 c 1.712 0 3.099 1.388 3.099 3.099 C 22.157 54.522 32.404 64.77 45 64.77 c 12.595 0 22.843 -10.248 22.843 -22.843 c 0 -1.712 1.387 -3.099 3.099 -3.099 s 3.099 1.388 3.099 3.099 C 74.042 57.94 61.013 70.968 45 70.968 z"\r
        style="\r
          stroke: none;\r
          stroke-width: 1;\r
          stroke-dasharray: none;\r
          stroke-linecap: butt;\r
          stroke-linejoin: miter;\r
          stroke-miterlimit: 10;\r
          fill: currentColor;\r
          fill-rule: nonzero;\r
          opacity: 1;\r
        "\r
        transform=" matrix(1 0 0 1 0 0) "\r
        stroke-linecap="round"\r
      />\r
      <path\r
        d="M 45 60.738 L 45 60.738 c -10.285 0 -18.7 -8.415 -18.7 -18.7 V 18.7 C 26.3 8.415 34.715 0 45 0 h 0 c 10.285 0 18.7 8.415 18.7 18.7 v 23.337 C 63.7 52.322 55.285 60.738 45 60.738 z"\r
        style="\r
          stroke: none;\r
          stroke-width: 1;\r
          stroke-dasharray: none;\r
          stroke-linecap: butt;\r
          stroke-linejoin: miter;\r
          stroke-miterlimit: 10;\r
          fill: currentColor;\r
          fill-rule: nonzero;\r
          opacity: 1;\r
        "\r
        transform=" matrix(1 0 0 1 0 0) "\r
        stroke-linecap="round"\r
      />\r
      <path\r
        d="M 45 89.213 c -1.712 0 -3.099 -1.387 -3.099 -3.099 V 68.655 c 0 -1.712 1.388 -3.099 3.099 -3.099 c 1.712 0 3.099 1.387 3.099 3.099 v 17.459 C 48.099 87.826 46.712 89.213 45 89.213 z"\r
        style="\r
          stroke: none;\r
          stroke-width: 1;\r
          stroke-dasharray: none;\r
          stroke-linecap: butt;\r
          stroke-linejoin: miter;\r
          stroke-miterlimit: 10;\r
          fill: currentColor;\r
          fill-rule: nonzero;\r
          opacity: 1;\r
        "\r
        transform=" matrix(1 0 0 1 0 0) "\r
        stroke-linecap="round"\r
      />\r
      <path\r
        d="M 55.451 90 H 34.549 c -1.712 0 -3.099 -1.387 -3.099 -3.099 s 1.388 -3.099 3.099 -3.099 h 20.901 c 1.712 0 3.099 1.387 3.099 3.099 S 57.163 90 55.451 90 z"\r
        style="\r
          stroke: none;\r
          stroke-width: 1;\r
          stroke-dasharray: none;\r
          stroke-linecap: butt;\r
          stroke-linejoin: miter;\r
          stroke-miterlimit: 10;\r
          fill: currentColor;\r
          fill-rule: nonzero;\r
          opacity: 1;\r
        "\r
        transform=" matrix(1 0 0 1 0 0) "\r
        stroke-linecap="round"\r
      />\r
    </g>\r
  </svg>`, Tt = ` <svg\r
      xmlns="http://www.w3.org/2000/svg"\r
      viewBox="0 0 256 256"\r
      style="vertical-align: middle"\r
      stroke="currentColor"\r
    >\r
      <rect fill="none"></rect>\r
      <path\r
        fill="none"\r
        stroke-linecap="round"\r
        stroke-linejoin="round"\r
        stroke-width="16"\r
        d="M159.99414,79.99512,76.68629,164.68629a16,16,0,0,0,22.62742,22.62742L198.62156,86.62253A32,32,0,1,0,153.36672,41.3677L54.05887,142.05887a48,48,0,0,0,67.88226,67.88226l82.053-81.946"\r
      ></path>\r
    </svg>`, dt = `<svg viewBox="-3 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\r
    \r
    <defs>\r
\r
</defs>\r
    <g id="Page-1" stroke="none" stroke-width="1" fill="none">\r
        <g id="Icon-Set"  transform="translate(-259.000000, -203.000000)" fill="currentColor">\r
            <path d="M282,211 L262,211 C261.448,211 261,210.553 261,210 C261,209.448 261.448,209 262,209 L282,209 C282.552,209 283,209.448 283,210 C283,210.553 282.552,211 282,211 L282,211 Z M281,231 C281,232.104 280.104,233 279,233 L265,233 C263.896,233 263,232.104 263,231 L263,213 L281,213 L281,231 L281,231 Z M269,206 C269,205.447 269.448,205 270,205 L274,205 C274.552,205 275,205.447 275,206 L275,207 L269,207 L269,206 L269,206 Z M283,207 L277,207 L277,205 C277,203.896 276.104,203 275,203 L269,203 C267.896,203 267,203.896 267,205 L267,207 L261,207 C259.896,207 259,207.896 259,209 L259,211 C259,212.104 259.896,213 261,213 L261,231 C261,233.209 262.791,235 265,235 L279,235 C281.209,235 283,233.209 283,231 L283,213 C284.104,213 285,212.104 285,211 L285,209 C285,207.896 284.104,207 283,207 L283,207 Z M272,231 C272.552,231 273,230.553 273,230 L273,218 C273,217.448 272.552,217 272,217 C271.448,217 271,217.448 271,218 L271,230 C271,230.553 271.448,231 272,231 L272,231 Z M267,231 C267.552,231 268,230.553 268,230 L268,218 C268,217.448 267.552,217 267,217 C266.448,217 266,217.448 266,218 L266,230 C266,230.553 266.448,231 267,231 L267,231 Z M277,231 C277.552,231 278,230.553 278,230 L278,218 C278,217.448 277.552,217 277,217 C276.448,217 276,217.448 276,218 L276,230 C276,230.553 276.448,231 277,231 L277,231 Z" id="trash" sketch:type="MSShapeGroup">\r
\r
</path>\r
        </g>\r
    </g>\r
</svg>`, Rt = '<svg  style="enable-background:new 0 0 32 32;" version="1.1" viewBox="0 0 32 32" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M28,14H18V4c0-1.104-0.896-2-2-2s-2,0.896-2,2v10H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h10v10c0,1.104,0.896,2,2,2  s2-0.896,2-2V18h10c1.104,0,2-0.896,2-2S29.104,14,28,14z"/></svg>';
class H {
}
m(H, "messageHistoryId", {
  get: () => sessionStorage.getItem("onbotgo-messageHistory-id"),
  set: (t) => sessionStorage.setItem("onbotgo-messageHistory-id", t),
  remove: () => sessionStorage.removeItem("onbotgo-messageHistory-id")
}), m(H, "messagesHistory", {
  get: () => JSON.parse(sessionStorage.getItem("onbotgo-messageHistory") ?? "[]"),
  add: (t) => {
    const e = JSON.parse(
      sessionStorage.getItem("onbotgo-messageHistory") ?? "[]"
    );
    sessionStorage.setItem(
      "onbotgo-messageHistory",
      JSON.stringify([...e, ...t])
    );
  },
  remove: () => sessionStorage.removeItem("onbotgo-messageHistory")
});
const B = "onbotgo-chatcontainer";
class vt extends R {
  constructor() {
    super();
    m(this, "messagesHistory", [
      {
        message: J.welcomeMessage,
        type: "apiMessage"
      },
      ...H.messagesHistory.get() ?? []
    ]);
    m(this, "attachedFiles", []);
    m(this, "attachedRecord");
    m(this, "messagesContainer");
    m(this, "scrollBar");
    m(this, "chatInput");
    m(this, "attachFileInput");
    m(this, "btnOnbotgoAttachInput");
    m(this, "btnattachNewFile");
    m(this, "isRecordSelected", !1);
    m(this, "defaultStyles", {
      bottom: "60px",
      right: "10px",
      position: "absolute",
      display: "flex",
      boxShadow: "rgba(0, 0, 0, 0.16) 0px 5px 40px",
      flexDirection: "column",
      width: "400px",
      gap: "10px",
      maxWidth: "calc(100vw - 90px)",
      maxHeight: "704px",
      height: "70vh",
      backgroundColor: "white",
      borderRadius: "8px",
      padding: "10px 20px"
    });
    this.setStyles(this.defaultStyles), this.classList.add("hidden"), this.render(), this.addEventListener("onbotgo-delete-record", () => {
      this.isRecordSelected = !1, this.attachedRecord = null, this.getChild("#onbotgo-btnrecordSend").style.display = "none", this.getChild("#onbotgo-btnrecord").style.display = "grid", this.getChild("#onbotgo-chatinput").style.display = "grid", this.getChild("#onbotgo-attachFileTemplateContainer").style.display = "grid", this.getChild("#onbotgo-micrecord").style.display = "none", this.updateScrollbar();
    }), this.addEventListener("onbotgo-stop-record", (e) => {
      this.attachedRecord = e.detail, this.getChild("#onbotgo-btnrecordSend").onclick = () => {
        this.onSubmit(), this.getChild("#onbotgo-chatinput").style.display = "grid", this.getChild("#onbotgo-btnrecord").style.display = "grid", this.getChild("#onbotgo-btnrecordSend").style.display = "none", this.renderAttachTemplate(), this.getChild("#onbotgo-btnrecordSend").onclick = () => {
        };
      };
    });
  }
  onSubmit(e) {
    if (e = (e == null ? void 0 : e.trim()) ?? "", !e && !this.attachedFiles.length && !this.attachedRecord)
      return;
    structuredClone(this.messagesHistory).splice(0, 1), console.log(
      H.messageHistoryId,
      H.messageHistoryId.get()
    );
    const o = {
      message: e,
      unique_id: H.messageHistoryId.get() ?? ""
    };
    this.attachedFiles.length && (this.addMessages(
      this.attachedFiles.map((i) => ({
        type: "userMessage",
        file: i,
        fileType: i.type.includes("image") ? "image" : i.type
      }))
    ), this.attachedFiles = [], this.renderAttachTemplate(), this.messagesContainer.querySelectorAll("img").forEach((i) => {
      i.onload = () => this.updateScrollbar();
    })), this.attachedRecord && this.addMessages([
      {
        type: "userMessage",
        file: this.attachedRecord,
        fileType: "audio"
      }
    ]), e && this.addMessages([{ message: e, type: "userMessage" }]), H.messagesHistory.add([
      {
        message: e,
        type: "userMessage"
      }
    ]), this.renderMessages([{ type: "LoadingMessage" }]), this.updateScrollbar(), this.isRecordSelected = !1, this.attachedRecord = null, this.chatInput.getChild("input").value = "", this.getChild("#onbotgo-chatinput").style.display = "grid", this.getChild("#onbotgo-attachFileTemplateContainer").style.display = "grid", this.getChild("#onbotgo-micrecord").style.display = "none", this.updateScrollbar(), Fe(o).then((i) => {
      var s, l;
      console.log(i), i != null && i.unique_id && H.messageHistoryId.set(i.unique_id), (l = (s = i == null ? void 0 : i.data) == null ? void 0 : s.process) != null && l.length && i.data.process.forEach((h) => {
        this.addMessages([
          {
            type: h.role,
            name: h.name,
            content: h.content
          }
        ]);
      }), this.addMessages([
        { message: i.response, type: "apiMessage" }
      ]), H.messagesHistory.add([
        {
          message: i.response,
          type: "apiMessage"
        }
      ]);
    }).catch((i) => console.log(i)).finally(() => {
      var i;
      (i = this.messagesContainer.querySelectorAll(".loading-api-message")) == null || i.forEach((s) => s.remove()), this.updateScrollbar();
    });
  }
  toggle() {
    this.classList.contains("hidden") ? (this.scrollBar.style.visibility = "hidden", this.classList.remove("hidden")) : (this.classList.add("hidden"), this.messagesContainer.scrollTop > 0 && (this.scrollBar.style.visibility = "visible"));
  }
  attachFile(e) {
    this.attachedFiles.push(e.target.files[0]), this.renderAttachTemplate();
  }
  renderMessages(e) {
    e.forEach(
      (r) => !["dataMessage"].includes(r.type) && this.messagesContainer.appendChild(new yt(r))
    );
  }
  addMessages(e, { updateScrollbar: r } = { updateScrollbar: !1 }) {
    this.messagesHistory = this.messagesHistory.concat(e), this.renderMessages(e), r && this.updateScrollbar();
  }
  updateScrollbar() {
    this.scrollBar.setScrollThumbHeight(), this.messagesContainer.scrollTo(0, this.messagesContainer.scrollHeight), this.messagesContainer.scrollTop > 0 && this.scrollBar.style.visibility === "hidden" && (this.scrollBar.style.visibility = "visible");
  }
  renderAttachTemplate() {
    this.getChild("#onbotgo-attachFileTemplateContainer").innerHTML = this.renderHTML(Ae, {
      attachedFiles: this.attachedFiles,
      paperclipIcon: Tt,
      iconPlus: Rt,
      trashIcon: dt
    }), this.attachFileInput = this.querySelector("#onbotgoAttachFileInput"), this.btnOnbotgoAttachInput = this.querySelector("#btnOnbotgoAttachInput") ?? this.querySelector("#btnOnbotgoAttachInputMenu"), this.btnattachNewFile = this.querySelector("#onbotgo-btnattachNewFile"), this.btnOnbotgoAttachInput.onclick = () => {
      if (!this.attachedFiles.length)
        return this.attachFileInput.click();
    }, this.btnattachNewFile.onclick = () => this.attachFileInput.click(), this.attachFileInput.onchange = (e) => this.attachFile(e);
  }
  render() {
    this.innerHTML = this.renderHTML(Pe, {
      logo: _e,
      micIcon: We,
      paperclipIcon: Tt,
      attachedFiles: this.attachedFiles,
      trashIcon: dt,
      iconPlus: Rt,
      sendIcon: qt,
      isRecordSelected: this.isRecordSelected
    }), this.renderAttachTemplate();
    const e = this.querySelector("onbotgo-micrecord"), r = this.querySelector("onbotgo-dropdown");
    this.messagesContainer = this.querySelector("#onbotgo-messageContainer"), this.chatInput = this.querySelector(bt.tag), this.scrollBar = this.querySelector(Ct.tag), this.getChild("#onbotgo-btnrecordSend").style.display = "none", this.querySelector("#onbotgo-btnrecord").onclick = () => {
      this.isRecordSelected = !0, this.getChild("#onbotgo-btnrecord").style.display = "none", this.getChild("#onbotgo-btnrecordSend").style.display = "grid", this.getChild("#onbotgo-chatinput").style.display = "none", this.getChild("#onbotgo-attachFileTemplateContainer").style.display = "none", this.getChild("#onbotgo-micrecord").style.display = "flex", this.renderAttachTemplate(), this.updateScrollbar();
    }, this.chatInput.onSubmit(this.onSubmit.bind(this)), this.renderMessages(this.messagesHistory), this.isRecordSelected ? (r.style.display = "none", this.chatInput.style.display = "none", e.style.display = "flex") : (r.style.display = "grid", this.btnattachNewFile.style.display = "grid", this.chatInput.style.display = "grid", e.style.display = "none"), this.querySelectorAll(".onbotgo-attachedFile").forEach((o, i) => {
      o.querySelector("i").onclick = (s) => {
        this.attachedFiles.splice(i, 1), this.renderAttachTemplate(), this.attachedFiles.length && (this.querySelector(".onbotgo-dropdown-content").style.display = "flex"), s.stopPropagation();
      };
    });
  }
}
const $e = (n) => ({
  [`${B}.hidden`]: {
    visibility: "hidden"
  },
  [`${B} .onbotgo-messageContainer`]: {
    display: "flex !important"
  },
  [`${B} .onbotgo-chat-footer`]: {
    "font-family": n.typography.primary,
    display: "flex !important",
    "align-items": "center",
    "justify-content": "flex-end",
    gap: "5px"
  },
  [`${B} .onbotgo-icon-paperclip path`]: {
    stroke: n.colors.primary
  }
});
vt.tag = B;
class pt extends R {
  constructor() {
    super();
    m(this, "componentStyles", {
      display: "inline-block",
      position: "absolute",
      bottom: "20px",
      right: "20px"
    });
    const e = new ft(L.customIcon), r = new vt();
    e.onclick = () => r.toggle(), this.appendChild(e), this.appendChild(r), this.setStyles(this.componentStyles);
  }
  connectedCallback() {
  }
}
pt.tag = "onbotgo-chatbot";
function ze({ element: n, styles: t }) {
  const e = t.reduce(
    (i, s) => ({
      ...i,
      ...s
    }),
    {}
  ), r = document.createElement("style"), o = De(e);
  r.innerHTML = o, n.prepend(r);
}
function qe(n, t = {}) {
  const e = Object.keys(t), r = Object.values(t);
  let o = `${n}{`;
  return e.forEach((i, s) => o += `${i}:${r[s]};`), o + "}";
}
function Be(n, t = {}) {
  const e = Object.keys(t), r = Object.values(t);
  let o = `${n}{`;
  return e.forEach((i, s) => o += `${i}${r[s]};`), o + "}";
}
function De(n, t = !1) {
  const e = Object.keys(n);
  let r = "";
  return e.forEach(
    (o) => r += t === "animation" ? Be(
      o,
      n[o]
    ) : qe(
      o,
      n[o]
    )
  ), r;
}
const Oe = "onbotgo-iconbutton";
class Bt extends R {
  constructor() {
    super(), this.setStyles({
      display: "grid",
      placeItems: "center",
      verticalAlign: "middle",
      position: "relative",
      cursor: "pointer",
      borderRadius: "200px",
      padding: "7px",
      boxSizing: "border-box"
    });
    const t = this.getAttribute("color"), e = this.getAttribute("size");
    let r = "black";
    t === "primary" && (r = L.colors.primary), t === "danger" && (r = "red"), e && (this.querySelector("svg").style.width = `calc(${e} - 16px)`, this.querySelector("svg").style.height = `calc(${e} - 16px)`, this.setStyles({ width: e, height: e })), this.setStyles({ color: r });
    const o = new O();
    o.setStyles({
      backgroundColor: r,
      opacity: 0.2,
      position: "absolute",
      width: "100%",
      borderRadius: "200px",
      height: "100%",
      zIndex: 0
    }), this.appendChild(o);
  }
}
Bt.tag = Oe;
const Ne = "onbotgo-dropdown";
class Dt extends R {
  constructor() {
    super(), this.setStyles({ position: "relative" });
    const t = this.querySelector(".onbotgo-dropdown-content"), e = this.querySelectorAll(".onbotgo-attachedFile-name");
    t.style.display = "none", t.style.position = "absolute", t.style.backgroundColor = "white", t.style.minWidth = "170px", t.style.width = "fit-content", t.style.borderRadius = "8px", t.style.bottom = "100%", t.style.left = "50%", t.style.transform = "translateX(-50%)", t.style.boxShadow = "0px 8px 16px 0px rgba(0, 0, 0, 0.2)", t.style.padding = "12px 16px", t.style.zIndex = "1", t.style.gap = "10px", t.style.justifyContent = "space-between", t.style.flexDirection = "column", e.forEach((r) => {
      r.style.maxWidth = "180px", r.style.textOverflow = "ellipsis", r.style.overflow = "hidden", r.style.whiteSpace = "nowrap", r.style.minWidth = "170px";
    }), document.body.onclick = (r) => {
      if (this.contains(r.target))
        return t.contains(r.target) ? void 0 : this.toggle();
      t.style.display = "none";
    };
  }
  toggle() {
    const t = this.querySelector(".onbotgo-dropdown-content");
    t.style.display === "flex" ? t.style.display = "none" : t.style.display = "flex";
  }
}
Dt.tag = Ne;
const je = "onbotgo-fabbutton";
class Ot extends R {
  constructor() {
    super(), this.setStyles({
      display: "inline-block",
      verticalAlign: "middle",
      position: "relative",
      cursor: "pointer",
      borderRadius: "200px",
      padding: "7px",
      color: "white"
    });
    const t = this.getAttribute("color"), e = this.getAttribute("size");
    let r = "black";
    t === "primary" && (r = L.colors.primary), e && this.setStyles({ width: e, height: e }), this.setStyles({
      backgroundColor: t ? r : "transparent",
      fill: "white"
    });
  }
}
Ot.tag = je;
const Ve = `<onbotgo-iconbutton color="danger" size="36px" id="onbootgo-delete-record">\r
  <i style="cursor: pointer">{{it.trashIcon | safe}}</i>\r
</onbotgo-iconbutton>\r
\r
<!--PLAY-->\r
<onbotgo-box id="onbotgo-mic-record" style="width: 100%"></onbotgo-box>\r
<onbotgo-iconbutton\r
  id="onbotgo-btn-stop"\r
  color="primary"\r
  size="36px"\r
  style="margin-top: 5px"\r
>\r
  <i style="cursor: pointer">{{it.stopIcon | safe}}</i>\r
</onbotgo-iconbutton>\r
<!-- END PLAY-->\r
\r
<!-- STOP -->\r
<onbotgo-box\r
  id="onbotgo-empty-waveform"\r
  style="width: 100%; padding: 0 8px; padding-top: 1px"\r
>\r
  <onbotgo-box\r
    style="\r
      height: 1px;\r
      width: 100%;\r
      background-color: lightgray;\r
      display: block;\r
    "\r
  ></onbotgo-box>\r
</onbotgo-box>\r
<onbotgo-iconbutton\r
  id="onbotgo-btn-play"\r
  color="primary"\r
  size="36px"\r
  style="margin-top: 7px"\r
>\r
  <i style="cursor: pointer">{{it.playIcon | safe}}</i>\r
</onbotgo-iconbutton>\r
<!-- END STOP-->\r
`, Ye = `<svg viewBox="0 0 28 28" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\r
    <defs>\r
</defs>\r
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\r
        <g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-520.000000, -571.000000)" fill="currentColor">\r
            <path d="M546,571 L522,571 C520.896,571 520,571.896 520,573 L520,597 C520,598.104 520.896,599 522,599 L546,599 C547.104,599 548,598.104 548,597 L548,573 C548,571.896 547.104,571 546,571" id="stop" sketch:type="MSShapeGroup">\r
\r
</path>\r
        </g>\r
    </g>\r
</svg>`;
function Ft(n, t, e, r) {
  return new (e || (e = Promise))(function(o, i) {
    function s(c) {
      try {
        h(r.next(c));
      } catch (a) {
        i(a);
      }
    }
    function l(c) {
      try {
        h(r.throw(c));
      } catch (a) {
        i(a);
      }
    }
    function h(c) {
      var a;
      c.done ? o(c.value) : (a = c.value, a instanceof e ? a : new e(function(d) {
        d(a);
      })).then(s, l);
    }
    h((r = r.apply(n, t || [])).next());
  });
}
class Ge {
  constructor() {
    this.listeners = {};
  }
  on(t, e) {
    return this.listeners[t] || (this.listeners[t] = /* @__PURE__ */ new Set()), this.listeners[t].add(e), () => this.un(t, e);
  }
  once(t, e) {
    const r = this.on(t, e), o = this.on(t, () => {
      r(), o();
    });
    return r;
  }
  un(t, e) {
    this.listeners[t] && (e ? this.listeners[t].delete(e) : delete this.listeners[t]);
  }
  unAll() {
    this.listeners = {};
  }
  emit(t, ...e) {
    this.listeners[t] && this.listeners[t].forEach((r) => r(...e));
  }
}
class Ue extends Ge {
  constructor(t) {
    super(), this.subscriptions = [], this.options = t;
  }
  onInit() {
  }
  init(t) {
    this.wavesurfer = t, this.onInit();
  }
  destroy() {
    this.emit("destroy"), this.subscriptions.forEach((t) => t());
  }
}
const Xe = ["audio/webm", "audio/wav", "audio/mpeg", "audio/mp4", "audio/mp3"];
class xt extends Ue {
  constructor(t) {
    var e;
    super(Object.assign(Object.assign({}, t), { audioBitsPerSecond: (e = t.audioBitsPerSecond) !== null && e !== void 0 ? e : 128e3 })), this.stream = null, this.mediaRecorder = null;
  }
  static create(t) {
    return new xt(t || {});
  }
  renderMicStream(t) {
    const e = new AudioContext(), r = e.createMediaStreamSource(t), o = e.createAnalyser();
    r.connect(o);
    const i = o.frequencyBinCount, s = new Float32Array(i), l = i / e.sampleRate;
    let h;
    const c = () => {
      o.getFloatTimeDomainData(s), this.wavesurfer && (this.wavesurfer.options.cursorWidth = 0, this.wavesurfer.options.interact = !1, this.wavesurfer.load("", [s], l)), h = requestAnimationFrame(c);
    };
    return c(), () => {
      cancelAnimationFrame(h), r == null || r.disconnect(), e == null || e.close();
    };
  }
  startMic() {
    return Ft(this, void 0, void 0, function* () {
      let t;
      try {
        t = yield navigator.mediaDevices.getUserMedia({ audio: !0 });
      } catch (r) {
        throw new Error("Error accessing the microphone: " + r.message);
      }
      const e = this.renderMicStream(t);
      return this.subscriptions.push(this.once("destroy", e)), this.stream = t, t;
    });
  }
  stopMic() {
    this.stream && (this.stream.getTracks().forEach((t) => t.stop()), this.stream = null);
  }
  startRecording() {
    return Ft(this, void 0, void 0, function* () {
      const t = this.stream || (yield this.startMic()), e = this.mediaRecorder || new MediaRecorder(t, { mimeType: this.options.mimeType || Xe.find((o) => MediaRecorder.isTypeSupported(o)), audioBitsPerSecond: this.options.audioBitsPerSecond });
      this.mediaRecorder = e, this.stopRecording();
      const r = [];
      e.ondataavailable = (o) => {
        o.data.size > 0 && r.push(o.data);
      }, e.onstop = () => {
        var o;
        const i = new Blob(r, { type: e.mimeType });
        this.emit("record-end", i), this.options.renderRecordedAudio !== !1 && ((o = this.wavesurfer) === null || o === void 0 || o.load(URL.createObjectURL(i)));
      }, e.start(), this.emit("record-start");
    });
  }
  isRecording() {
    var t;
    return ((t = this.mediaRecorder) === null || t === void 0 ? void 0 : t.state) === "recording";
  }
  stopRecording() {
    var t;
    this.isRecording() && ((t = this.mediaRecorder) === null || t === void 0 || t.stop());
  }
  destroy() {
    super.destroy(), this.stopRecording(), this.stopMic();
  }
}
const Ze = "onbotgo-micrecord";
class Nt extends R {
  constructor() {
    var e;
    super();
    m(this, "isRecording", !1);
    m(this, "defaultStyles", {
      display: "flex",
      flexDirection: "row",
      alignItems: "center",
      justifyContent: "center",
      width: "calc(100% - 34px)",
      padding: "10px 0",
      maxWidth: "100%",
      background: "transparent",
      gap: "10px",
      height: "51px"
    });
    m(this, "wavesurfer");
    m(this, "recorder");
    this.render(), this.hideMic(), this.initMic(), this.getChild("#onbootgo-delete-record").onclick = () => {
      let r = new Event("onbotgo-delete-record");
      document.querySelector("onbotgo-chatcontainer").dispatchEvent(r);
    }, (e = this.recorder) == null || e.on("record-end", (r) => {
      let o = new CustomEvent("onbotgo-stop-record", { detail: r });
      document.querySelector("onbotgo-chatcontainer").dispatchEvent(o);
    });
  }
  render() {
    this.innerHTML = this.renderHTML(Ve, {
      isRecording: this.isRecording,
      playIcon: ct,
      stopIcon: Ye,
      trashIcon: dt
    }), this.getChild("#onbotgo-btn-play").onclick = () => {
      this.isRecording = !0, this.displayMic(), this.startRecording();
    }, this.getChild("#onbotgo-btn-stop").onclick = () => {
      this.isRecording = !1, this.hideMic(), this.stopRecording();
    };
  }
  initMic() {
    this.wavesurfer = et.create({
      container: this.getChild("#onbotgo-mic-record"),
      waveColor: "lightgray",
      barWidth: 1,
      barHeight: 1,
      fillParent: !0
    }), this.recorder = this.wavesurfer.registerPlugin(xt.create());
  }
  startRecording() {
    this.recorder.isRecording() || this.recorder.startRecording();
  }
  stopRecording() {
    this.recorder.isRecording() && this.recorder.stopRecording();
  }
  displayMic() {
    const e = this.getChild("#onbotgo-mic-record");
    this.getChild("#onbotgo-btn-stop").style.display = "grid", [e].forEach((i) => {
      i.style.display = "inline-block";
    });
    const r = this.getChild("#onbotgo-empty-waveform");
    [this.getChild("#onbotgo-btn-play"), r].forEach((i) => {
      i.style.display = "none";
    });
  }
  hideMic() {
    const e = this.getChild("#onbotgo-mic-record"), r = this.getChild("#onbotgo-btn-stop");
    [e, r].forEach((i) => {
      i.style.display = "none";
    });
    const o = this.getChild("#onbotgo-empty-waveform");
    this.getChild("#onbotgo-btn-play").style.display = "grid", [o].forEach((i) => {
      i.style.display = "inline-block";
    });
  }
}
Nt.tag = Ze;
class Qe {
  constructor({ chatflow: t, theme: e, welcomeMessage: r }) {
    if (J.chatflowID = t, console.log(r), r && (J.welcomeMessage = r), !e)
      return;
    const { typography: o, colors: i, icon: s } = e;
    o && Object.keys(o).forEach(
      (l) => L.typography[l] = o[l]
    ), i && Object.keys(i).forEach(
      (l) => L.colors[l] = i[l]
    ), s && (L.customIcon = s);
  }
  init() {
    this.registerComponents(
      pt,
      ft,
      vt,
      yt,
      bt,
      O,
      Ct,
      Bt,
      Dt,
      Ot,
      Nt
    );
    const t = new pt();
    ze({
      element: t,
      styles: [
        fe(L),
        Te(L),
        He(L),
        $e(L)
      ]
    }), document.body.appendChild(t);
  }
  registerComponents(...t) {
    t.forEach((e) => customElements.define(e.tag, e));
  }
}
export {
  Qe as default
};
